(function(){
	var loadHandler = window['i_{8C5D0166-3432-42F4-B778-C003FCBA4087}'];
	var interactionJson = "{"d":{"i":"interactivity_woxll7z9udn","C":{"is":[{"i":"by5dc820qir8","t":{"h":"<p style=\"line-height:1.15em;padding-top:1em;padding-bottom:0.5em;font-size:24px;font-family:fnt2_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt2_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">İşbirliğine Dayalı Paydaş Katılımı</span></p>","a":"<p><b>İşbirliğine Dayalı Paydaş Katılımı</b></p>","r":[],"d":["İşbirliğine Dayalı Paydaş Katılımı"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Eğitimciler, toplum kuruluşları, politika yapıcılar ve ebeveynler de dahil olmak üzere kilit paydaşları ağ oluşturma sürecine dahil etmenin önemini kabul etmek.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Göçmen öğrencilere yönelik kapsayıcı ve kapsamlı desteği teşvik etmek için farklı perspektifleri, deneyimleri ve uzmanlıkları dahil etmenin değerini anlamak.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><br>​</p>","a":"<p>Eğitimciler, toplum kuruluşları, politika yapıcılar ve ebeveynler de dahil olmak üzere kilit paydaşları ağ oluşturma sürecine dahil etmenin önemini kabul etmek.</p><p>Göçmen öğrencilere yönelik kapsayıcı ve kapsamlı desteği teşvik etmek için farklı perspektifleri, deneyimleri ve uzmanlıkları dahil etmenin değerini anlamak.</p><p><br></p>","r":[],"d":["Eğitimciler, toplum kuruluşları, politika yapıcılar ve ebeveynler de dahil olmak üzere kilit paydaşları ağ oluşturma sürecine dahil etmenin önemini kabul etmek.\nGöçmen öğrencilere yönelik kapsayıcı ve kapsamlı desteği teşvik etmek için farklı perspektifleri, deneyimleri ve uzmanlıkları dahil etmenin değerini anlamak.\n "]},"tp":"item"},{"i":"75xrkdjdhpgo","t":{"h":"<p style=\"line-height:1.15em;padding-top:1em;padding-bottom:0.5em;font-size:24px;font-family:fnt2_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt2_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Sürdürülebilir Ağ Geliştirme</span></p>","a":"<p><b>Sürdürülebilir Ağ Geliştirme</b></p>","r":[],"d":["Sürdürülebilir Ağ Geliştirme"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Devam eden ilişkileri besleyerek, bilgi alışverişini teşvik ederek ve paydaşlar arasında ortak sorumluluk duygusunu geliştirerek sürdürülebilir ağlar kurmanın önemini takdir etmek.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Ağın etkinliğinin sürdürülmesi ve geliştirilmesinde sürekli değerlendirme, geri bildirim döngüleri ve uyarlanabilirliğin rolünü anlamak.</span></p>","a":"<p>Devam eden ilişkileri besleyerek, bilgi alışverişini teşvik ederek ve paydaşlar arasında ortak sorumluluk duygusunu geliştirerek sürdürülebilir ağlar kurmanın önemini takdir etmek.</p><p>Ağın etkinliğinin sürdürülmesi ve geliştirilmesinde sürekli değerlendirme, geri bildirim döngüleri ve uyarlanabilirliğin rolünü anlamak.</p>","r":[],"d":["Devam eden ilişkileri besleyerek, bilgi alışverişini teşvik ederek ve paydaşlar arasında ortak sorumluluk duygusunu geliştirerek sürdürülebilir ağlar kurmanın önemini takdir etmek.\nAğın etkinliğinin sürdürülmesi ve geliştirilmesinde sürekli değerlendirme, geri bildirim döngüleri ve uyarlanabilirliğin rolünü anlamak."]},"tp":"item"},{"i":"2eo7wv2lzymu","t":{"h":"<p style=\"line-height:1.15em;padding-top:1em;padding-bottom:0.5em;font-size:24px;font-family:fnt2_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt2_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Etkili İletişim Kanalları</span></p>","a":"<p><b>Etkili İletişim Kanalları</b></p>","r":[],"d":["Etkili İletişim Kanalları"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Okullar, toplum kuruluşları ve göçmen öğrencilerin desteklenmesinde rol alan diğer paydaşlar arasında açık ve etkili iletişim kanalları kurmanın önemini kavramak.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Etkili bilgi alışverişini ve karar almayı kolaylaştırmak için toplantılar, dijital platformlar ve işbirliğine dayalı araçlar gibi çeşitli iletişim yöntemlerini kullanmanın önemini anlamak.</span></p>","a":"<p>Okullar, toplum kuruluşları ve göçmen öğrencilerin desteklenmesinde rol alan diğer paydaşlar arasında açık ve etkili iletişim kanalları kurmanın önemini kavramak.</p><p>Etkili bilgi alışverişini ve karar almayı kolaylaştırmak için toplantılar, dijital platformlar ve işbirliğine dayalı araçlar gibi çeşitli iletişim yöntemlerini kullanmanın önemini anlamak.</p>","r":[],"d":["Okullar, toplum kuruluşları ve göçmen öğrencilerin desteklenmesinde rol alan diğer paydaşlar arasında açık ve etkili iletişim kanalları kurmanın önemini kavramak.\nEtkili bilgi alışverişini ve karar almayı kolaylaştırmak için toplantılar, dijital platformlar ve işbirliğine dayalı araçlar gibi çeşitli iletişim yöntemlerini kullanmanın önemini anlamak."]},"tp":"item"},{"i":"k33hfztv9kig","t":{"h":"<p style=\"line-height:1.15em;padding-top:1em;padding-bottom:0.5em;font-size:24px;font-family:fnt2_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt2_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Kültürler Arası İletişim Becerileri</span></p>","a":"<p><b>Kültürler Arası İletişim Becerileri</b></p>","r":[],"d":["Kültürler Arası İletişim Becerileri"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Okul-toplum işbirliklerinde farklı kültürel geçmişler, diller ve iletişim tarzları arasında gezinmek için kültürler arası iletişim becerileri geliştirmek.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Paydaşlar arasında etkili diyalog, anlayış ve güveni teşvik etmede aktif dinleme, empati ve kültürel duyarlılığın değerini takdir etme.</span></p>","a":"<p>Okul-toplum işbirliklerinde farklı kültürel geçmişler, diller ve iletişim tarzları arasında gezinmek için kültürler arası iletişim becerileri geliştirmek.</p><p>Paydaşlar arasında etkili diyalog, anlayış ve güveni teşvik etmede aktif dinleme, empati ve kültürel duyarlılığın değerini takdir etme.</p>","r":[],"d":["Okul-toplum işbirliklerinde farklı kültürel geçmişler, diller ve iletişim tarzları arasında gezinmek için kültürler arası iletişim becerileri geliştirmek.\nPaydaşlar arasında etkili diyalog, anlayış ve güveni teşvik etmede aktif dinleme, empati ve kültürel duyarlılığın değerini takdir etme."]},"tp":"item"},{"i":"us45rw7sgsje","t":{"h":"<p style=\"line-height:1.15em;padding-top:1em;padding-bottom:0.5em;font-size:24px;font-family:fnt2_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt2_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Ortak Vizyon ve Hedefler</span></p>","a":"<p><b>Ortak Vizyon ve Hedefler</b></p>","r":[],"d":["Ortak Vizyon ve Hedefler"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Göçmen öğrencilerin desteklenmesine yönelik uyumlu bir çerçeve oluşturmak için paydaşlar arasında ortak bir vizyon ve ortak hedefler oluşturmanın önemini kavramak.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Başarılı okul-toplum ortaklıkları için bir temel oluşturmada işbirliğine dayalı hedef belirleme ve kolektif karar almanın rolünü anlamak.</span></p>","a":"<p>Göçmen öğrencilerin desteklenmesine yönelik uyumlu bir çerçeve oluşturmak için paydaşlar arasında ortak bir vizyon ve ortak hedefler oluşturmanın önemini kavramak.</p><p>Başarılı okul-toplum ortaklıkları için bir temel oluşturmada işbirliğine dayalı hedef belirleme ve kolektif karar almanın rolünü anlamak.</p>","r":[],"d":["Göçmen öğrencilerin desteklenmesine yönelik uyumlu bir çerçeve oluşturmak için paydaşlar arasında ortak bir vizyon ve ortak hedefler oluşturmanın önemini kavramak.\nBaşarılı okul-toplum ortaklıkları için bir temel oluşturmada işbirliğine dayalı hedef belirleme ve kolektif karar almanın rolünü anlamak."]},"tp":"item"},{"i":"n0djwa3rftyi","t":{"h":"<p style=\"line-height:1.15em;padding-top:1em;padding-bottom:0.5em;font-size:24px;font-family:fnt2_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt2_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Kapsayıcı Hedef Belirleme ve Planlama</span></p>","a":"<p><b>Kapsayıcı Hedef Belirleme ve Planlama</b></p>","r":[],"d":["Kapsayıcı Hedef Belirleme ve Planlama"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Göçmen öğrencilerin ve ailelerinin özel ihtiyaçlarını, isteklerini ve zorluklarını dikkate alan kapsayıcı hedef belirleme ve planlama süreçlerinin önemini kabul edin.</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Kapsayıcı ve eşitlikçi sonuçları teşvik etmek için tüm seslerin duyulmasını ve temsil edilmesini sağlayarak çeşitli paydaşları hedef belirleme sürecine dahil etme stratejileri hakkında bilgi edinme</span></p>","a":"<p>Göçmen öğrencilerin ve ailelerinin özel ihtiyaçlarını, isteklerini ve zorluklarını dikkate alan kapsayıcı hedef belirleme ve planlama süreçlerinin önemini kabul edin.</p><p>Kapsayıcı ve eşitlikçi sonuçları teşvik etmek için tüm seslerin duyulmasını ve temsil edilmesini sağlayarak çeşitli paydaşları hedef belirleme sürecine dahil etme stratejileri hakkında bilgi edinme</p>","r":[],"d":["Göçmen öğrencilerin ve ailelerinin özel ihtiyaçlarını, isteklerini ve zorluklarını dikkate alan kapsayıcı hedef belirleme ve planlama süreçlerinin önemini kabul edin.\nKapsayıcı ve eşitlikçi sonuçları teşvik etmek için tüm seslerin duyulmasını ve temsil edilmesini sağlayarak çeşitli paydaşları hedef belirleme sürecine dahil etme stratejileri hakkında bilgi edinme"]},"tp":"item"}],"i":{"i":"fbppi2vxs528","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt2_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt2_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">GİRİŞ</span></p>","a":"<p><b>GİRİŞ</b></p>","r":[],"d":["GİRİŞ"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">İşte 4. modülden bazı önemli çıkarımlar:</span></p><p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">&quot;AĞIN KURULMASI VE BAKIMI&quot;</span></p>","a":"<p>İşte 4. modülden bazı önemli çıkarımlar:</p><p>&quot;AĞIN KURULMASI VE BAKIMI&quot;</p>","r":[],"d":["İşte 4. modülden bazı önemli çıkarımlar:\n\"AĞIN KURULMASI VE BAKIMI\""]},"v":true},"s":{"i":"j1wexzoolr9h","t":{"h":"<p style=\"line-height:1.15em;padding-top:0em;padding-bottom:0em;font-size:24px;font-family:fnt2_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:24px;font-family:fnt2_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal;\">Summary</span></p>","a":"<p><b>Summary</b></p>","r":[],"d":["Summary"]},"c":{"h":"<p style=\"line-height:1.5em;padding-top:0.4em;padding-bottom:0.8em;font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;font-weight:normal;font-style:normal\"><span style=\"font-size:14px;font-family:fnt0_27085, Arial, Serif, Sans-Serif;\">​</span></p>","a":"<p></p>","r":[],"d":[]},"v":false}},"s":{"t":"TAKEAWAYS","te":true,"nbe":true,"ftw":true,"iw":960,"ih":540,"csc":1,"lar":true,"dat":3,"upb":false,"mce":true,"vl":4,"tw":0.3,"tht":1}},"s":{"f":{"t":{"tf":{"f":"fnt2_27085","s":24,"b":false,"i":false},"pf":{"t":"p","lh":1.15,"T":1,"b":0.5}},"nt":{"tf":{"f":"fnt1_27085","s":24,"b":false,"i":false},"pf":{"t":"p","lh":1.15,"T":1,"b":0.5}},"bt":{"tf":{"f":"fnt2_27085","s":24,"b":false,"i":false},"pf":{"t":"p","lh":1.15,"T":1,"b":0.5}}},"p":{"accessibilityHiddenLink":"Go to the beginning of the description","accessibilitySkinCreatedWith":"Created with iSpring evaluation version","accessibleAriaLabelBottomPanel":"Bottom Bar","accessibleAriaLabelItemDescription":"Element description","accessibleAriaLabelNavigationButtons":"Navigation buttons","accessibleAriaLabelSettings":"Accessibility Settings","backToAppButtonLabel":"Back","contentList":"Content List","emptySearchResult":"No matches found.","enableAccessibilityMode":"Turn on accessibility mode","enableNormalMode":"Turn off accessibility mode","nextButton":"Next","prevButton":"","search":"Search"},"c":{"i":"o43uw7s0qykr","n":"Custom preset","s":{"i":{"bg":16250871,"b":14737632,"titc":16777215,"titb":5723991,"ci":false,"tb":16777215,"ttc":4737096,"ttb":11316396,"tbtb":5409759,"tbttc":16777215,"htb":8237567,"htc":16777215},"t":{"ti":4737096,"h":4737096,"s":4737096,"t":4737096,"H":5409759},"d":{"bg":16777215,"b":14737632},"ap":{"pb":15987699,"c":4737096,"plb":7368816},"p":{"pb":13882575,"plb":16777215,"bb":11057222,"hbb":9939000,"btc":16777215,"hbtc":16777215,"mbat":5409759}}},"m":{"i":"yc036b74xdt4","n":"Visuals.Common.Editor.ColorScheme.Name.LightBlue","s":{"i":{"bg":16777215,"b":14737632,"titc":16777215,"titb":5723991,"ci":false,"tb":16777215,"ttc":4737096,"ttb":11316396,"tbtb":5731260,"tbttc":16777215,"htb":6455761,"htc":16777215},"t":{"ti":4737096,"h":4737096,"s":4737096,"t":4737096,"H":238},"d":{"bg":16777215,"b":14737632},"ap":{"pb":15987699,"c":4737096,"plb":7368816},"p":{"pb":13554131,"plb":16777215,"bb":5409759,"hbb":3898324,"btc":16777215,"hbtc":16777215,"mbat":2833222}}}},"ps":"{\n    \"c\" : {\n        \"P\" : {\n            \"e\" : true,\n            \"l\" : true,\n            \"m\" : \"slideTimeline\",\n            \"v\" : false\n        },\n        \"l\" : true,\n        \"n\" : \"bySlides\",\n        \"o\" : false,\n        \"p\" : false,\n        \"r\" : true,\n        \"s\" : false,\n        \"v\" : true,\n        \"w\" : false,\n        \"x\" : false,\n        \"z\" : true\n    },\n    \"l\" : {\n        \"button.content.normal\" : \"#ffffff\",\n        \"button.content.over\" : \"#ffffff\",\n        \"button.face.normal\" : \"#a8b846\",\n        \"button.face.over\" : \"#97a838\",\n        \"companyLogo.background\" : \"#F3F3F3\",\n        \"hyperlink\" : \"#528BDF\",\n        \"listItem.face.over\" : \"#E1E2E2\",\n        \"listItem.face.pressed\" : \"#9DA2A6\",\n        \"listItem.label.over\" : \"#47484A\",\n        \"listItem.label.pressed\" : \"#FFFFFF\",\n        \"listItem.label.visited\" : \"#727374\",\n        \"page.background\" : \"#d3d4cf\",\n        \"panel.background\" : \"#FFFFFF\",\n        \"panel.text\" : \"#47484A\",\n        \"player.background\" : \"#ffffff\",\n        \"popup.background\" : \"#F3F3F3\",\n        \"progress.background\" : \"#F7F7F7\",\n        \"progress.loading\" : \"#D9D9D9\",\n        \"progress.playback\" : \"#528BDF\",\n        \"slide.border\" : \"#e0e0e0\",\n        \"text\" : \"#47484A\"\n    },\n    \"m\" : false,\n    \"o\" : {\n        \"h\" : true,\n        \"m\" : true,\n        \"n\" : false,\n        \"s\" : true,\n        \"t\" : false\n    },\n    \"s\" : {\n        \"L\" : true,\n        \"l\" : true,\n        \"n\" : false,\n        \"o\" : true,\n        \"p\" : false,\n        \"v\" : true\n    },\n    \"t\" : {\n        \"b\" : [ \"attachments\" ],\n        \"bl\" : false,\n        \"c\" : true,\n        \"l\" : true,\n        \"v\" : true\n    }\n}","sb":"C:/Users/dbara/Desktop/mooc-tr (Published)/data/interaction_bg_1.png","fp":false,"rs":{"a":{},"v":{},"i":{"C:/Users/dbara/Desktop/mooc-tr (Published)/data/interaction_bg_1.png":{"s":"intr5\\images\\interaction_bg_1.png","v":1280,"h":720}}},"fs":{"fnt0_27085":["intr5/fonts/fnt0.woff"],"fnt1_27085":["intr5/fonts/fnt1.woff"],"fnt2_27085":["intr5/fonts/fnt2.woff"]},"S":{"fnt0_27085":{"f":"Open Sans","b":false,"i":false},"fnt1_27085":{"f":"Segoe UI","b":false,"i":false},"fnt2_27085":{"f":"Segoe UI","b":true,"i":false}},"v":{}}";
	var skinSettings = {};
	loadHandler&&loadHandler(112, 'interactivity_woxll7z9udn', interactionJson, skinSettings);
	})();