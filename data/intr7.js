(function(){
	var loadHandler = window['i_{8C5D0166-3432-42F4-B778-C003FCBA4087}'];
	var interactionJson = "eyJkIjp7ImkiOiJpbnRlcmFjdGl2aXR5X3Z3d2JiZmR4aDZtOCIsIkMiOnsiaXMiOlt7ImkiOiJvYjJjMnBsajJjbmIiLCJ0Ijp7ImgiOiI8cCBzdHlsZT1cImxpbmUtaGVpZ2h0OjEuMTVlbTtwYWRkaW5nLXRvcDoxZW07cGFkZGluZy1ib3R0b206MC41ZW07Zm9udC1zaXplOjI0cHg7Zm9udC1mYW1pbHk6Zm50M181MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbFwiPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjI0cHg7Zm9udC1mYW1pbHk6Zm50M181MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5BLUI8L3NwYW4+PC9wPiIsImEiOiI8cD48Yj5BLUI8L2I+PC9wPiIsInIiOltdLCJkIjpbIkEtQiJdfSwiYyI6eyJoIjoiPHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjVlbTtwYWRkaW5nLXRvcDowLjRlbTtwYWRkaW5nLWJvdHRvbTowLjhlbTtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpPcGVuIFNhbnM7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPkFjZXZlcywgVC4gQy4sICZhbXA7IE9yb3NjbywgTS4gSi4gKDIwMTQpLiA8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQxXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPkN1bHR1cmFsbHkgcmVzcG9uc2l2ZSB0ZWFjaGluZzwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+IChEb2N1bWVudCBOby4gSUMtMikuIFJldHJpZXZlZCBPY3RvYmVyLCAyMDwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+PHN1cD50aDwvc3VwPjwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+LCAyMDE5LCBmcm9tIDwvc3Bhbj48YSB0aXRsZT1cImh0dHA6Ly9jZWVkYXIuZWR1Y2F0aW9uLnVmbC5lZHUvdG9vbHMvaW5ub3ZhdGlvbi1jb25maWd1cmF0aW9ucy9cIiBocmVmPVwiaHR0cDovL2NlZWRhci5lZHVjYXRpb24udWZsLmVkdS90b29scy9pbm5vdmF0aW9uLWNvbmZpZ3VyYXRpb25zL1wiIHRhcmdldD1cIl9ibGFua1wiPjxzcGFuIHN0eWxlPVwidGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZSA7Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5odHRwOi8vY2VlZGFyLmVkdWNhdGlvbi51ZmwuZWR1L3Rvb2xzL2lubm92YXRpb24tY29uZmlndXJhdGlvbnMvPC9zcGFuPjwvYT48L3A+PHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjVlbTtwYWRkaW5nLXRvcDowLjRlbTtwYWRkaW5nLWJvdHRvbTowLjhlbTtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpPcGVuIFNhbnM7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJ0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lIDtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPkFpbnNjb3csIE0uICgyMDIwKS4gUHJvbW90aW5nIGluY2x1c2lvbiBhbmQgZXF1aXR5IGluIGVkdWNhdGlvbjogbGVzc29ucyBmcm9tIGludGVybmF0aW9uYWwgZXhwZXJpZW5jZXMuwqA8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQxXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPk5vcmRpYyBKb3VybmFsIG9mIFN0dWRpZXMgaW4gRWR1Y2F0aW9uYWwgUG9saWN5PC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj4swqA8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQxXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPjY8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPigxKSwgNy0xNi48L3NwYW4+PC9wPjxwIHN0eWxlPVwibGluZS1oZWlnaHQ6MS41ZW07cGFkZGluZy10b3A6MC40ZW07cGFkZGluZy1ib3R0b206MC44ZW07Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6T3BlbiBTYW5zO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbFwiPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5BbHRyaWNodGVyLCBILiAoMjAxNCkuIFJlZ2lvbmFsZSBCaWxkdW5nc2xhbmRzY2hhZnRlbiB1bmQgbmV1ZSBTdGV1ZXJ1bmcgZGVzIFNjaHVsc3lzdGVtcy4gSW4gUy5HLiBIdWJlciAoZWQuKSwgPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MV81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5Lb29wZXJhdGl2ZSBCaWxkdW5nc2xhbmRzY2hhZnRlbi4gTmV0endlcmtlKG4pIGltIHVuZCBtaXQgU3lzdGVtPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj4gKHBwLiAzMC00OCkuIENvbG9nbmU6IENhcmwgTGluay9Xb2x0ZXJzIEtsdXdlci48L3NwYW4+PC9wPjxwIHN0eWxlPVwibGluZS1oZWlnaHQ6MS41ZW07cGFkZGluZy10b3A6MC40ZW07cGFkZGluZy1ib3R0b206MC44ZW07Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6T3BlbiBTYW5zO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbFwiPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5BbWVyaWNhbiBFdmFsdWF0aW9uIEFzc29jaWF0aW9uIChBRUEpICgyMDExKS4gPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MV81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5TdGF0ZW1lbnQgb24gQ3VsdHVyYWwgQ29tcGV0ZW5jZSBvbiBFdmFsdWF0aW9uLjwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+IFJldHJpZXZlZCBNYXJjaCAxOSwgMjAxOSwgZnJvbSA8L3NwYW4+PGEgdGl0bGU9XCJodHRwOi8vd3d3LmV2YWwub3JnL3AvY20vbGQvZmlkPTkyXCIgaHJlZj1cImh0dHA6Ly93d3cuZXZhbC5vcmcvcC9jbS9sZC9maWQ9OTJcIiB0YXJnZXQ9XCJfYmxhbmtcIj48c3BhbiBzdHlsZT1cInRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmUgO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+aHR0cDovL3d3dy5ldmFsLm9yZy9wL2NtL2xkL2ZpZD05Mjwvc3Bhbj48L2E+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQxXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPiA8L3NwYW4+PC9wPjxwIHN0eWxlPVwibGluZS1oZWlnaHQ6MS41ZW07cGFkZGluZy10b3A6MC40ZW07cGFkZGluZy1ib3R0b206MC44ZW07Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6T3BlbiBTYW5zO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbFwiPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5BcmJ1dGhub3QsIEsuICgyMDE3KS4gPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MV81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5HbG9iYWwgUGVyc3BlY3RpdmVzIG9uIEVkdWNhdGlvbmFsIFRlc3Rpbmc6IEV4YW1pbmluZyBGYWlybmVzcywgSGlnaC1TdGFrZXMgYW5kIFBvbGljeSBSZWZvcm08L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPi4gQmluZ2xleTogRW1lcmFsZC48L3NwYW4+PC9wPjxwIHN0eWxlPVwibGluZS1oZWlnaHQ6MS41ZW07cGFkZGluZy10b3A6MC40ZW07cGFkZGluZy1ib3R0b206MC44ZW07Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbFwiPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5BdHRpYSwgSS4gKDIwMTQpLiBSYXNzaXNtdXMgKG5pY2h0KSBiZWltIE5hbWVuIG5lbm5lbi4gQnVuZGVzemVudHJhbGUgZsO8ciBwb2xpdGlzY2hlIEJpbGR1bmcuIDwvc3Bhbj48YSB0aXRsZT1cImh0dHBzOi8vd3d3LmJwYi5kZS9hcHV6LzE4MDg1NC9yYXNzaXNtdXMtbmljaHQtYmVpbS1uYW1lbi1uZW5uZW5cIiBocmVmPVwiaHR0cHM6Ly93d3cuYnBiLmRlL2FwdXovMTgwODU0L3Jhc3Npc211cy1uaWNodC1iZWltLW5hbWVuLW5lbm5lblwiIHRhcmdldD1cIl9ibGFua1wiPjxzcGFuIHN0eWxlPVwidGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZSA7Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5odHRwczovL3d3dy5icGIuZGUvYXB1ei8xODA4NTQvcmFzc2lzbXVzLW5pY2h0LWJlaW0tbmFtZW4tbmVubmVuPC9zcGFuPjwvYT48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+ICgwMi4wMS4yMDIyKTwvc3Bhbj48L3A+PHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjVlbTtwYWRkaW5nLXRvcDowLjRlbTtwYWRkaW5nLWJvdHRvbTowLjhlbTtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPkJhcmJlciwgMjAxMDwvc3Bhbj48L3A+PHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjVlbTtwYWRkaW5nLXRvcDowLjRlbTtwYWRkaW5nLWJvdHRvbTowLjhlbTtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpPcGVuIFNhbnM7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPkJhcnJldHQsIE0uLCBCeXJhbSwgTS4sIEzDoXrDoXIsIEkuLCBNb21wb2ludC1HYWlsbGFyZCwgUC4gJmFtcDsgUy4gUGhpbGlwcG91ICgyMDE0KS4gPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MV81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5EZXZlbG9waW5nIEludGVyY3VsdHVyYWwgQ29tcGV0ZW5jZSB0aHJvdWdoIEVkdWNhdGlvbi4gPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5TdHJhc2JvdXJnOiBDb3VuY2lsIG9mIEV1cm9wZSBQdWJsaXNoaW5nLjwvc3Bhbj48L3A+PHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjVlbTtwYWRkaW5nLXRvcDowLjRlbTtwYWRkaW5nLWJvdHRvbTowLjhlbTtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpPcGVuIFNhbnM7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPkJlcmtlbWV5ZXIsIE4uLCBNYW5pdGl1cywgVi4sIE3DvHRoaW5nLCBLLiAmYW1wOyBCb3MsIFcuICgyMDA5KS4gRXJnZWJuaXNzZSBuYXRpb25hbGVyIHVuZCBpbnRlcm5hdGlvbmFsZXIgRm9yc2NodW5nIHp1IHNjaHVsaXNjaGVuIElubm92YXRpb25zbmV0endlcmtlbi4gPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MV81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5aZWl0c2NocmlmdCBmw7xyIEVyemllaHVuZ3N3aXNzZW5zY2hhZnQgMTI8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPig0KSwgNjY3LTY4OS48L3NwYW4+PC9wPjxwIHN0eWxlPVwibGluZS1oZWlnaHQ6MS41ZW07cGFkZGluZy10b3A6MC40ZW07cGFkZGluZy1ib3R0b206MC44ZW07Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6T3BlbiBTYW5zO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbFwiPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5CZXJrZW1leWVyLCBNLiwgQm9zLCBXLiAmYW1wOyBLdXBlciwgSC4gKDIwMTApLiBOZXR6d2Vya2UgaW0gQmlsZHVuZ3NzeXN0ZW0uIEluOiBOLiBCZXJrZcKtbWV5ZXIsIFcuIEJvcyAmYW1wOyBILiBLdXBlciAoSHJzZy4pLCA8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQxXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPlNjaHVscmVmb3JtIGR1cmNoIFZlcm5ldHp1bmcuIEludGVyZGlzemlwbGluw6RyZSBCZXRyYWNodHVuZ2VuPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj4gKHBwLiAxMS0xOSkuIE3DvG5zdGVyOiBXYXhtYW5uLjwvc3Bhbj48L3A+PHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjVlbTtwYWRkaW5nLXRvcDowLjRlbTtwYWRkaW5nLWJvdHRvbTowLjhlbTtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpPcGVuIFNhbnM7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPkJvbHRvbiwgRy4gKDIwMTApLiA8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQxXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPlJlZmxlY3RpdmUgcHJhY3RpY2U6IFdyaXRpbmcgYW5kIFByb2Zlc3Npb25hbCBEZXZlbG9wbWVudC48L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPiBMb25kb246IFNhZ2UuIDwvc3Bhbj48L3A+PHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjVlbTtwYWRkaW5nLXRvcDowLjRlbTtwYWRkaW5nLWJvdHRvbTowLjhlbTtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpPcGVuIFNhbnM7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPkJvb3MsIEYuLCBFeG5lciwgQS4gJmFtcDsgSGVpdGdlciwgQi4gKDIwMDApLiBTb3ppYWxlIE5ldHp3ZXJrZSBzaW5kIGFuZGVycyDigKYgPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MV81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5Kb3VybmFsIGbDvHIgU2NodWxlbnR3aWNrbHVuZywgNDwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+KDMpLCAxNOKAkzE5Ljwvc3Bhbj48L3A+PHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjVlbTtwYWRkaW5nLXRvcDowLjRlbTtwYWRkaW5nLWJvdHRvbTowLjhlbTtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpPcGVuIFNhbnM7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPkJyb3duLCBNLiwgTWNOYW1hcmEsIEcuLCBP4oCZSGFyYSwgSi4sICZhbXA7IFNoZXZsaW4sIFAuICgyMDIwKS4gUG9seWNlbnRyaWMgaW5zcGVjdGlvbjogQSBjYXRhbHlzdCBmb3Igc3BhcmtpbmcgcG9zaXRpdmUgaW50ZXJhY3Rpb25zIGluIGVkdWNhdGlvbmFsIG5ldHdvcmtzLsKgPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MV81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5FdmFsdWF0aW9uPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj4swqA8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQxXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPjI2PC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj4oMSksIDc2LTk3Ljwvc3Bhbj48L3A+PHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjVlbTtwYWRkaW5nLXRvcDowLjRlbTtwYWRkaW5nLWJvdHRvbTowLjhlbTtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpPcGVuIFNhbnM7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPkJyb3duLCBNLiwgQWx0cmljaHRlciwgSC4sIFNoeWFuLCBJLiwgUm9kcsOtZ3VleiBDb25kZSwgTS4gSi4sIE1jTmFtYXJhLCBHLiwgSGVyem9nLVB1bnplbmJlcmdlciwgQi4sIFZvcm9ieWV2YSwgSS4sIFphbmdyYW5kbywgVi4sIEdhcmRlemksIFMuLCBPJiMzOTtIYXJhLCBKLiwgUG9zdGxiYXVlciwgQS4sIE1pbHlhZXZhLCBELiwgQWdlZXZhLCBOLiwgRnVsdGVyZXIsIFMuLCBHYW1hem8gR2FyY8OtYSwgQS4sICZhbXA7IFPDoW5jaGV6LCBMLiAoMjAyMikuIENoYWxsZW5nZXMgYW5kIE9wcG9ydHVuaXRpZXMgZm9yIEN1bHR1cmFsbHkgUmVzcG9uc2l2ZSBMZWFkZXJzaGlwIGluIFNjaG9vbHM6IEV2aWRlbmNlIGZyb20gRm91ciBFdXJvcGVhbiBDb3VudHJpZXMuIDwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDFfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+UG9saWN5IEZ1dHVyZXMgaW4gRWR1Y2F0aW9uLCAyMDwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+KDUpLCA1ODAtNjA3LiA8L3NwYW4+PGEgdGl0bGU9XCJodHRwczovL2RvaS5vci8xMC4xMTc3LzE0NzgyMTAzMjExMDQwOTA5XCIgaHJlZj1cImh0dHBzOi8vZG9pLm9yLzEwLjExNzcvMTQ3ODIxMDMyMTEwNDA5MDlcIiB0YXJnZXQ9XCJfYmxhbmtcIj48c3BhbiBzdHlsZT1cInRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmUgO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+aHR0cHM6Ly9kb2kub3IvMTAuMTE3Ny8xNDc4MjEwMzIxMTA0MDkwOTwvc3Bhbj48L2E+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPiA8L3NwYW4+PC9wPjxwIHN0eWxlPVwibGluZS1oZWlnaHQ6MS41ZW07cGFkZGluZy10b3A6MC40ZW07cGFkZGluZy1ib3R0b206MC44ZW07Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbFwiPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj4oQnJvd24gZXQgYWwuLCAyMDIzeHgpPC9zcGFuPjwvcD48cCBzdHlsZT1cImxpbmUtaGVpZ2h0OjEuNWVtO3BhZGRpbmctdG9wOjAuNGVtO3BhZGRpbmctYm90dG9tOjAuOGVtO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5Ok9wZW4gU2Fucztmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWxcIj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+QnJ5aywgQS5TLiwgQmVuZGVyIFNlYnJpbmcsIFAuLCBBbGxlbnN3b3J0aCwgRS4sIEx1cHBlc2N1LCBTLiAmYW1wOyBFYXN0b24sIEouUS4gKDIwMTApLiA8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQxXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPk9yZ2FuaXNpbmcgU2Nob29scyBmb3IgSW1wcm92ZW1lbnQuIExlc3NvbnMgZnJvbSBDaGljYWdvLjwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+IENoaWNhZ286IFRoZSBVbml2ZXJzaXR5IG9mIENoaWNhZ28gUHJlc3MuPC9zcGFuPjwvcD4iLCJhIjoiPHA+QWNldmVzLCBULiBDLiwgJmFtcDsgT3Jvc2NvLCBNLiBKLiAoMjAxNCkuIDxpPkN1bHR1cmFsbHkgcmVzcG9uc2l2ZSB0ZWFjaGluZzwvaT4gKERvY3VtZW50IE5vLiBJQy0yKS4gUmV0cmlldmVkIE9jdG9iZXIsIDIwPHN1cD50aDwvc3VwPiwgMjAxOSwgZnJvbSA8YSB0aXRsZT1cImh0dHA6Ly9jZWVkYXIuZWR1Y2F0aW9uLnVmbC5lZHUvdG9vbHMvaW5ub3ZhdGlvbi1jb25maWd1cmF0aW9ucy9cIiBocmVmPVwiaHR0cDovL2NlZWRhci5lZHVjYXRpb24udWZsLmVkdS90b29scy9pbm5vdmF0aW9uLWNvbmZpZ3VyYXRpb25zL1wiIHRhcmdldD1cIl9ibGFua1wiPjx1Pmh0dHA6Ly9jZWVkYXIuZWR1Y2F0aW9uLnVmbC5lZHUvdG9vbHMvaW5ub3ZhdGlvbi1jb25maWd1cmF0aW9ucy88L3U+PC9hPjwvcD48cD48dT5BaW5zY293LCBNLiAoMjAyMCkuIFByb21vdGluZyBpbmNsdXNpb24gYW5kIGVxdWl0eSBpbiBlZHVjYXRpb246IGxlc3NvbnMgZnJvbSBpbnRlcm5hdGlvbmFsIGV4cGVyaWVuY2VzLsKgPC91PjxpPk5vcmRpYyBKb3VybmFsIG9mIFN0dWRpZXMgaW4gRWR1Y2F0aW9uYWwgUG9saWN5PC9pPizCoDxpPjY8L2k+KDEpLCA3LTE2LjwvcD48cD5BbHRyaWNodGVyLCBILiAoMjAxNCkuIFJlZ2lvbmFsZSBCaWxkdW5nc2xhbmRzY2hhZnRlbiB1bmQgbmV1ZSBTdGV1ZXJ1bmcgZGVzIFNjaHVsc3lzdGVtcy4gSW4gUy5HLiBIdWJlciAoZWQuKSwgPGk+S29vcGVyYXRpdmUgQmlsZHVuZ3NsYW5kc2NoYWZ0ZW4uIE5ldHp3ZXJrZShuKSBpbSB1bmQgbWl0IFN5c3RlbTwvaT4gKHBwLiAzMC00OCkuIENvbG9nbmU6IENhcmwgTGluay9Xb2x0ZXJzIEtsdXdlci48L3A+PHA+QW1lcmljYW4gRXZhbHVhdGlvbiBBc3NvY2lhdGlvbiAoQUVBKSAoMjAxMSkuIDxpPlN0YXRlbWVudCBvbiBDdWx0dXJhbCBDb21wZXRlbmNlIG9uIEV2YWx1YXRpb24uPC9pPiBSZXRyaWV2ZWQgTWFyY2ggMTksIDIwMTksIGZyb20gPGEgdGl0bGU9XCJodHRwOi8vd3d3LmV2YWwub3JnL3AvY20vbGQvZmlkPTkyXCIgaHJlZj1cImh0dHA6Ly93d3cuZXZhbC5vcmcvcC9jbS9sZC9maWQ9OTJcIiB0YXJnZXQ9XCJfYmxhbmtcIj48dT5odHRwOi8vd3d3LmV2YWwub3JnL3AvY20vbGQvZmlkPTkyPC91PjwvYT48aT4gPC9pPjwvcD48cD5BcmJ1dGhub3QsIEsuICgyMDE3KS4gPGk+R2xvYmFsIFBlcnNwZWN0aXZlcyBvbiBFZHVjYXRpb25hbCBUZXN0aW5nOiBFeGFtaW5pbmcgRmFpcm5lc3MsIEhpZ2gtU3Rha2VzIGFuZCBQb2xpY3kgUmVmb3JtPC9pPi4gQmluZ2xleTogRW1lcmFsZC48L3A+PHA+QXR0aWEsIEkuICgyMDE0KS4gUmFzc2lzbXVzIChuaWNodCkgYmVpbSBOYW1lbiBuZW5uZW4uIEJ1bmRlc3plbnRyYWxlIGbDvHIgcG9saXRpc2NoZSBCaWxkdW5nLiA8YSB0aXRsZT1cImh0dHBzOi8vd3d3LmJwYi5kZS9hcHV6LzE4MDg1NC9yYXNzaXNtdXMtbmljaHQtYmVpbS1uYW1lbi1uZW5uZW5cIiBocmVmPVwiaHR0cHM6Ly93d3cuYnBiLmRlL2FwdXovMTgwODU0L3Jhc3Npc211cy1uaWNodC1iZWltLW5hbWVuLW5lbm5lblwiIHRhcmdldD1cIl9ibGFua1wiPjx1Pmh0dHBzOi8vd3d3LmJwYi5kZS9hcHV6LzE4MDg1NC9yYXNzaXNtdXMtbmljaHQtYmVpbS1uYW1lbi1uZW5uZW48L3U+PC9hPiAoMDIuMDEuMjAyMik8L3A+PHA+QmFyYmVyLCAyMDEwPC9wPjxwPkJhcnJldHQsIE0uLCBCeXJhbSwgTS4sIEzDoXrDoXIsIEkuLCBNb21wb2ludC1HYWlsbGFyZCwgUC4gJmFtcDsgUy4gUGhpbGlwcG91ICgyMDE0KS4gPGk+RGV2ZWxvcGluZyBJbnRlcmN1bHR1cmFsIENvbXBldGVuY2UgdGhyb3VnaCBFZHVjYXRpb24uIDwvaT5TdHJhc2JvdXJnOiBDb3VuY2lsIG9mIEV1cm9wZSBQdWJsaXNoaW5nLjwvcD48cD5CZXJrZW1leWVyLCBOLiwgTWFuaXRpdXMsIFYuLCBNw7x0aGluZywgSy4gJmFtcDsgQm9zLCBXLiAoMjAwOSkuIEVyZ2Vibmlzc2UgbmF0aW9uYWxlciB1bmQgaW50ZXJuYXRpb25hbGVyIEZvcnNjaHVuZyB6dSBzY2h1bGlzY2hlbiBJbm5vdmF0aW9uc25ldHp3ZXJrZW4uIDxpPlplaXRzY2hyaWZ0IGbDvHIgRXJ6aWVodW5nc3dpc3NlbnNjaGFmdCAxMjwvaT4oNCksIDY2Ny02ODkuPC9wPjxwPkJlcmtlbWV5ZXIsIE0uLCBCb3MsIFcuICZhbXA7IEt1cGVyLCBILiAoMjAxMCkuIE5ldHp3ZXJrZSBpbSBCaWxkdW5nc3N5c3RlbS4gSW46IE4uIEJlcmtlwq1tZXllciwgVy4gQm9zICZhbXA7IEguIEt1cGVyIChIcnNnLiksIDxpPlNjaHVscmVmb3JtIGR1cmNoIFZlcm5ldHp1bmcuIEludGVyZGlzemlwbGluw6RyZSBCZXRyYWNodHVuZ2VuPC9pPiAocHAuIDExLTE5KS4gTcO8bnN0ZXI6IFdheG1hbm4uPC9wPjxwPkJvbHRvbiwgRy4gKDIwMTApLiA8aT5SZWZsZWN0aXZlIHByYWN0aWNlOiBXcml0aW5nIGFuZCBQcm9mZXNzaW9uYWwgRGV2ZWxvcG1lbnQuPC9pPiBMb25kb246IFNhZ2UuIDwvcD48cD5Cb29zLCBGLiwgRXhuZXIsIEEuICZhbXA7IEhlaXRnZXIsIEIuICgyMDAwKS4gU296aWFsZSBOZXR6d2Vya2Ugc2luZCBhbmRlcnMg4oCmIDxpPkpvdXJuYWwgZsO8ciBTY2h1bGVudHdpY2tsdW5nLCA0PC9pPigzKSwgMTTigJMxOS48L3A+PHA+QnJvd24sIE0uLCBNY05hbWFyYSwgRy4sIE/igJlIYXJhLCBKLiwgJmFtcDsgU2hldmxpbiwgUC4gKDIwMjApLiBQb2x5Y2VudHJpYyBpbnNwZWN0aW9uOiBBIGNhdGFseXN0IGZvciBzcGFya2luZyBwb3NpdGl2ZSBpbnRlcmFjdGlvbnMgaW4gZWR1Y2F0aW9uYWwgbmV0d29ya3MuwqA8aT5FdmFsdWF0aW9uPC9pPizCoDxpPjI2PC9pPigxKSwgNzYtOTcuPC9wPjxwPkJyb3duLCBNLiwgQWx0cmljaHRlciwgSC4sIFNoeWFuLCBJLiwgUm9kcsOtZ3VleiBDb25kZSwgTS4gSi4sIE1jTmFtYXJhLCBHLiwgSGVyem9nLVB1bnplbmJlcmdlciwgQi4sIFZvcm9ieWV2YSwgSS4sIFphbmdyYW5kbywgVi4sIEdhcmRlemksIFMuLCBPJiMzOTtIYXJhLCBKLiwgUG9zdGxiYXVlciwgQS4sIE1pbHlhZXZhLCBELiwgQWdlZXZhLCBOLiwgRnVsdGVyZXIsIFMuLCBHYW1hem8gR2FyY8OtYSwgQS4sICZhbXA7IFPDoW5jaGV6LCBMLiAoMjAyMikuIENoYWxsZW5nZXMgYW5kIE9wcG9ydHVuaXRpZXMgZm9yIEN1bHR1cmFsbHkgUmVzcG9uc2l2ZSBMZWFkZXJzaGlwIGluIFNjaG9vbHM6IEV2aWRlbmNlIGZyb20gRm91ciBFdXJvcGVhbiBDb3VudHJpZXMuIDxpPlBvbGljeSBGdXR1cmVzIGluIEVkdWNhdGlvbiwgMjA8L2k+KDUpLCA1ODAtNjA3LiA8YSB0aXRsZT1cImh0dHBzOi8vZG9pLm9yLzEwLjExNzcvMTQ3ODIxMDMyMTEwNDA5MDlcIiBocmVmPVwiaHR0cHM6Ly9kb2kub3IvMTAuMTE3Ny8xNDc4MjEwMzIxMTA0MDkwOVwiIHRhcmdldD1cIl9ibGFua1wiPjx1Pmh0dHBzOi8vZG9pLm9yLzEwLjExNzcvMTQ3ODIxMDMyMTEwNDA5MDk8L3U+PC9hPiA8L3A+PHA+KEJyb3duIGV0IGFsLiwgMjAyM3h4KTwvcD48cD5CcnlrLCBBLlMuLCBCZW5kZXIgU2VicmluZywgUC4sIEFsbGVuc3dvcnRoLCBFLiwgTHVwcGVzY3UsIFMuICZhbXA7IEVhc3RvbiwgSi5RLiAoMjAxMCkuIDxpPk9yZ2FuaXNpbmcgU2Nob29scyBmb3IgSW1wcm92ZW1lbnQuIExlc3NvbnMgZnJvbSBDaGljYWdvLjwvaT4gQ2hpY2FnbzogVGhlIFVuaXZlcnNpdHkgb2YgQ2hpY2FnbyBQcmVzcy48L3A+IiwiciI6W10sImQiOlsiQWNldmVzLCBULiBDLiwgJiBPcm9zY28sIE0uIEouICgyMDE0KS4gQ3VsdHVyYWxseSByZXNwb25zaXZlIHRlYWNoaW5nIChEb2N1bWVudCBOby4gSUMtMikuIFJldHJpZXZlZCBPY3RvYmVyLCAyMHRoLCAyMDE5LCBmcm9tIGh0dHA6Ly9jZWVkYXIuZWR1Y2F0aW9uLnVmbC5lZHUvdG9vbHMvaW5ub3ZhdGlvbi1jb25maWd1cmF0aW9ucy9cbkFpbnNjb3csIE0uICgyMDIwKS4gUHJvbW90aW5nIGluY2x1c2lvbiBhbmQgZXF1aXR5IGluIGVkdWNhdGlvbjogbGVzc29ucyBmcm9tIGludGVybmF0aW9uYWwgZXhwZXJpZW5jZXMuwqBOb3JkaWMgSm91cm5hbCBvZiBTdHVkaWVzIGluIEVkdWNhdGlvbmFsIFBvbGljeSzCoDYoMSksIDctMTYuXG5BbHRyaWNodGVyLCBILiAoMjAxNCkuIFJlZ2lvbmFsZSBCaWxkdW5nc2xhbmRzY2hhZnRlbiB1bmQgbmV1ZSBTdGV1ZXJ1bmcgZGVzIFNjaHVsc3lzdGVtcy4gSW4gUy5HLiBIdWJlciAoZWQuKSwgS29vcGVyYXRpdmUgQmlsZHVuZ3NsYW5kc2NoYWZ0ZW4uIE5ldHp3ZXJrZShuKSBpbSB1bmQgbWl0IFN5c3RlbSAocHAuIDMwLTQ4KS4gQ29sb2duZTogQ2FybCBMaW5rL1dvbHRlcnMgS2x1d2VyLlxuQW1lcmljYW4gRXZhbHVhdGlvbiBBc3NvY2lhdGlvbiAoQUVBKSAoMjAxMSkuIFN0YXRlbWVudCBvbiBDdWx0dXJhbCBDb21wZXRlbmNlIG9uIEV2YWx1YXRpb24uIFJldHJpZXZlZCBNYXJjaCAxOSwgMjAxOSwgZnJvbSBodHRwOi8vd3d3LmV2YWwub3JnL3AvY20vbGQvZmlkPTkyIFxuQXJidXRobm90LCBLLiAoMjAxNykuIEdsb2JhbCBQZXJzcGVjdGl2ZXMgb24gRWR1Y2F0aW9uYWwgVGVzdGluZzogRXhhbWluaW5nIEZhaXJuZXNzLCBIaWdoLVN0YWtlcyBhbmQgUG9saWN5IFJlZm9ybS4gQmluZ2xleTogRW1lcmFsZC5cbkF0dGlhLCBJLiAoMjAxNCkuIFJhc3Npc211cyAobmljaHQpIGJlaW0gTmFtZW4gbmVubmVuLiBCdW5kZXN6ZW50cmFsZSBmw7xyIHBvbGl0aXNjaGUgQmlsZHVuZy4gaHR0cHM6Ly93d3cuYnBiLmRlL2FwdXovMTgwODU0L3Jhc3Npc211cy1uaWNodC1iZWltLW5hbWVuLW5lbm5lbiAoMDIuMDEuMjAyMilcbkJhcmJlciwgMjAxMFxuQmFycmV0dCwgTS4sIEJ5cmFtLCBNLiwgTMOhesOhciwgSS4sIE1vbXBvaW50LUdhaWxsYXJkLCBQLiAmIFMuIFBoaWxpcHBvdSAoMjAxNCkuIERldmVsb3BpbmcgSW50ZXJjdWx0dXJhbCBDb21wZXRlbmNlIHRocm91Z2ggRWR1Y2F0aW9uLiBTdHJhc2JvdXJnOiBDb3VuY2lsIG9mIEV1cm9wZSBQdWJsaXNoaW5nLlxuQmVya2VtZXllciwgTi4sIE1hbml0aXVzLCBWLiwgTcO8dGhpbmcsIEsuICYgQm9zLCBXLiAoMjAwOSkuIEVyZ2Vibmlzc2UgbmF0aW9uYWxlciB1bmQgaW50ZXJuYXRpb25hbGVyIEZvcnNjaHVuZyB6dSBzY2h1bGlzY2hlbiBJbm5vdmF0aW9uc25ldHp3ZXJrZW4uIFplaXRzY2hyaWZ0IGbDvHIgRXJ6aWVodW5nc3dpc3NlbnNjaGFmdCAxMig0KSwgNjY3LTY4OS5cbkJlcmtlbWV5ZXIsIE0uLCBCb3MsIFcuICYgS3VwZXIsIEguICgyMDEwKS4gTmV0endlcmtlIGltIEJpbGR1bmdzc3lzdGVtLiBJbjogTi4gQmVya2XCrW1leWVyLCBXLiBCb3MgJiBILiBLdXBlciAoSHJzZy4pLCBTY2h1bHJlZm9ybSBkdXJjaCBWZXJuZXR6dW5nLiBJbnRlcmRpc3ppcGxpbsOkcmUgQmV0cmFjaHR1bmdlbiAocHAuIDExLTE5KS4gTcO8bnN0ZXI6IFdheG1hbm4uXG5Cb2x0b24sIEcuICgyMDEwKS4gUmVmbGVjdGl2ZSBwcmFjdGljZTogV3JpdGluZyBhbmQgUHJvZmVzc2lvbmFsIERldmVsb3BtZW50LiBMb25kb246IFNhZ2UuIFxuQm9vcywgRi4sIEV4bmVyLCBBLiAmIEhlaXRnZXIsIEIuICgyMDAwKS4gU296aWFsZSBOZXR6d2Vya2Ugc2luZCBhbmRlcnMg4oCmIEpvdXJuYWwgZsO8ciBTY2h1bGVudHdpY2tsdW5nLCA0KDMpLCAxNOKAkzE5LlxuQnJvd24sIE0uLCBNY05hbWFyYSwgRy4sIE/igJlIYXJhLCBKLiwgJiBTaGV2bGluLCBQLiAoMjAyMCkuIFBvbHljZW50cmljIGluc3BlY3Rpb246IEEgY2F0YWx5c3QgZm9yIHNwYXJraW5nIHBvc2l0aXZlIGludGVyYWN0aW9ucyBpbiBlZHVjYXRpb25hbCBuZXR3b3Jrcy7CoEV2YWx1YXRpb24swqAyNigxKSwgNzYtOTcuXG5Ccm93biwgTS4sIEFsdHJpY2h0ZXIsIEguLCBTaHlhbiwgSS4sIFJvZHLDrWd1ZXogQ29uZGUsIE0uIEouLCBNY05hbWFyYSwgRy4sIEhlcnpvZy1QdW56ZW5iZXJnZXIsIEIuLCBWb3JvYnlldmEsIEkuLCBaYW5ncmFuZG8sIFYuLCBHYXJkZXppLCBTLiwgTydIYXJhLCBKLiwgUG9zdGxiYXVlciwgQS4sIE1pbHlhZXZhLCBELiwgQWdlZXZhLCBOLiwgRnVsdGVyZXIsIFMuLCBHYW1hem8gR2FyY8OtYSwgQS4sICYgU8OhbmNoZXosIEwuICgyMDIyKS4gQ2hhbGxlbmdlcyBhbmQgT3Bwb3J0dW5pdGllcyBmb3IgQ3VsdHVyYWxseSBSZXNwb25zaXZlIExlYWRlcnNoaXAgaW4gU2Nob29sczogRXZpZGVuY2UgZnJvbSBGb3VyIEV1cm9wZWFuIENvdW50cmllcy4gUG9saWN5IEZ1dHVyZXMgaW4gRWR1Y2F0aW9uLCAyMCg1KSwgNTgwLTYwNy4gaHR0cHM6Ly9kb2kub3IvMTAuMTE3Ny8xNDc4MjEwMzIxMTA0MDkwOSBcbihCcm93biBldCBhbC4sIDIwMjN4eClcbkJyeWssIEEuUy4sIEJlbmRlciBTZWJyaW5nLCBQLiwgQWxsZW5zd29ydGgsIEUuLCBMdXBwZXNjdSwgUy4gJiBFYXN0b24sIEouUS4gKDIwMTApLiBPcmdhbmlzaW5nIFNjaG9vbHMgZm9yIEltcHJvdmVtZW50LiBMZXNzb25zIGZyb20gQ2hpY2Fnby4gQ2hpY2FnbzogVGhlIFVuaXZlcnNpdHkgb2YgQ2hpY2FnbyBQcmVzcy4iXX0sInRwIjoiaXRlbSJ9LHsiaSI6InB5YTQ0OTgxMHJzcSIsInQiOnsiaCI6IjxwIHN0eWxlPVwibGluZS1oZWlnaHQ6MS4xNWVtO3BhZGRpbmctdG9wOjFlbTtwYWRkaW5nLWJvdHRvbTowLjVlbTtmb250LXNpemU6MjRweDtmb250LWZhbWlseTpmbnQzXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MjRweDtmb250LWZhbWlseTpmbnQzXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPkMtTDwvc3Bhbj48L3A+IiwiYSI6IjxwPjxiPkMtTDwvYj48L3A+IiwiciI6W10sImQiOlsiQy1MIl19LCJjIjp7ImgiOiI8cCBzdHlsZT1cImxpbmUtaGVpZ2h0OjEuNWVtO3BhZGRpbmctdG9wOjAuNGVtO3BhZGRpbmctYm90dG9tOjAuOGVtO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5Ok9wZW4gU2Fucztmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWxcIj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+Q2VudHJlIGZvciBDb21tdW5pdHkgQmFzZWQgUmVzZWFyY2gsICgyMDE5KS4gPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MV81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5FdmFsdWF0aW5nIFJlZnVnZWUgUHJvZ3JhbXMuIDwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+QWNjZXNzZWQgMzAgTm92ZW1iZXIgMjAyMCBmcm9tIGh0dHBzOi8vd3d3LmV2YWw0cmVmdWdlZS5jYS93aGF0LWlzLWNvbW11bml0eS1iYXNlZC1ldmFsdWF0aW9uPC9zcGFuPjwvcD48cCBzdHlsZT1cImxpbmUtaGVpZ2h0OjEuNWVtO3BhZGRpbmctdG9wOjAuNGVtO3BhZGRpbmctYm90dG9tOjAuOGVtO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5Ok9wZW4gU2Fucztmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWxcIj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+Q2hhcG1hbiwgQy4gKDIwMTkpLiBGcm9tIGhpZXJhcmNoaWVzIHRvIG5ldHdvcmtzLsKgPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MV81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5Kb3VybmFsIG9mIEVkdWNhdGlvbmFsIEFkbWluaXN0cmF0aW9uLDwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+IDwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDFfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+NTc8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPig1KSwgNTU0LTU3MC48L3NwYW4+PC9wPjxwIHN0eWxlPVwibGluZS1oZWlnaHQ6MS41ZW07cGFkZGluZy10b3A6MC40ZW07cGFkZGluZy1ib3R0b206MC44ZW07Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6T3BlbiBTYW5zO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbFwiPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5DcnVsLCBNLiwgU2NobmVpZGVyLCBKLiwgJmFtcDsgTGVsaWUsIEYuICgyMDEyKSAoZWRzLikuIDwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDFfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+VGhlIEV1cm9wZWFuIFNlY29uZCBHZW5lcmF0aW9uIENvbXBhcmVkLiBEb2VzIHRoZSBJbnRlZ3JhdGlvbiBDb250ZXh0IE1hdHRlcj88L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPiBSZXRyaWV2ZWQgRmVicnVhcnksIDl0aCwgMjAyMCBmcm9tIDwvc3Bhbj48YSB0aXRsZT1cImh0dHA6Ly93d3cudGllc3Byb2plY3QuZXUvY29tcG9uZW50L29wdGlvbixjb21fZG9jbWFuL3Rhc2ssY2F0X3ZpZXcvZ2lkLDQ0L0l0ZW1pZCwxNDIvXCIgaHJlZj1cImh0dHA6Ly93d3cudGllc3Byb2plY3QuZXUvY29tcG9uZW50L29wdGlvbixjb21fZG9jbWFuL3Rhc2ssY2F0X3ZpZXcvZ2lkLDQ0L0l0ZW1pZCwxNDIvXCIgdGFyZ2V0PVwiX2JsYW5rXCI+PHNwYW4gc3R5bGU9XCJ0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lIDtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPmh0dHA6Ly93d3cudGllc3Byb2plY3QuZXUvY29tcG9uZW50L29wdGlvbixjb21fZG9jbWFuL3Rhc2ssY2F0X3ZpZXcvZ2lkLDQ0L0l0ZW1pZCwxNDIvPC9zcGFuPjwvYT48L3A+PHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjVlbTtwYWRkaW5nLXRvcDowLjRlbTtwYWRkaW5nLWJvdHRvbTowLjhlbTtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpPcGVuIFNhbnM7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPkRlc2ZvcmdlcywgQy4sICZhbXA7IEFib3VjaGFhciwgQS4gKDIwMDMpLsKgPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MV81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5UaGUgaW1wYWN0IG9mIHBhcmVudGFsIGludm9sdmVtZW50LCBwYXJlbnRhbCBzdXBwb3J0IGFuZCBmYW1pbHkgZWR1Y2F0aW9uIG9uIHB1cGlsIGFjaGlldmVtZW50IGFuZCBhZGp1c3RtZW50OiBBIGxpdGVyYXR1cmUgcmV2aWV3PC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj7CoChWb2wuIDQzMykuIExvbmRvbjogRGZFUy48L3NwYW4+PC9wPjxwIHN0eWxlPVwibGluZS1oZWlnaHQ6MS41ZW07cGFkZGluZy10b3A6MC40ZW07cGFkZGluZy1ib3R0b206MC44ZW07Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6T3BlbiBTYW5zO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbFwiPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5GZWxkbWFuLCBBLiwgQWx0cmljaHRlciwgSC4sIFBvc2NoLCBQLiAmYW1wOyBTb21la2gsIEIuICgyMDE4KS4gPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MV81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5UZWFjaGVycyBJbnZlc3RpZ2F0ZSB0aGVpciBXb3JrLjwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+IDM8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPjxzdXA+cmQ8L3N1cD48L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPiBlZGl0aW9uLiBMb25kb24gJmFtcDsgTmV3IFlvcms6IFJvdXRsZWRnZS4gPC9zcGFuPjwvcD48cCBzdHlsZT1cImxpbmUtaGVpZ2h0OjEuNWVtO3BhZGRpbmctdG9wOjAuNGVtO3BhZGRpbmctYm90dG9tOjAuOGVtO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5Ok9wZW4gU2Fucztmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWxcIj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+Rm9yZCwgRC4gWS4sICZhbXA7IEtlYSwgQy4gRC4gKDIwMDkpLiBDcmVhdGluZyBjdWx0dXJhbGx5IHJlc3BvbnNpdmUgaW5zdHJ1Y3Rpb246IEZvciBzdHVkZW50c+KAmSBzYWtlIGFuZCB0ZWFjaGVyc+KAmSBzYWtlLiA8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQxXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPkZvY3VzIG9uIEV4Y2VwdGlvbmFsIENoaWxkcmVuPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj4sICg0MSksIDEtMTguPC9zcGFuPjwvcD48cCBzdHlsZT1cImxpbmUtaGVpZ2h0OjEuNWVtO3BhZGRpbmctdG9wOjAuNGVtO3BhZGRpbmctYm90dG9tOjAuOGVtO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWxcIj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+R2F5LCBHLiAoMjAxMCkuIEN1bHR1cmFsbHkgcmVzcG9uc2l2ZSB0ZWFjaGluZzogVGhlb3J5LCByZXNlYXJjaCwgYW5kIHByYWN0aWNlICgybmQgZWQuKS4gTmV3IFlvcmssIE5ZOiBUZWFjaGVycyBDb2xsZWdlIFByZXNzLjwvc3Bhbj48L3A+PHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjVlbTtwYWRkaW5nLXRvcDowLjRlbTtwYWRkaW5nLWJvdHRvbTowLjhlbTtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpPcGVuIFNhbnM7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPkhhZGZpZWxkLCBNLiAmYW1wOyBKb3BsaW5nLCBNLiAoMjAxMSkuIDwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDFfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+TmV0d29ya2luZyBhbmQgY29sbGFib3JhdGlvbiBpbiB1cmJhbiBjb250ZXh0cyBpbiBFbmdsYW5kOiBUaGUgcHJvYmxlbXMgYW5kIHBvc3NpYmlsaXRpZXMgb2Ygd29ya2luZyB0b2dldGhlciB0byBpbXByb3ZlIHNvY2lhbCBpbmNsdXNpb248L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPi4gUGFwZXIgZ2l2ZW4gYXQgdGhlIEVDRVItQ29uZmVyZW5jZSAyMDExLCBCZXJsaW4uPC9zcGFuPjwvcD48cCBzdHlsZT1cImxpbmUtaGVpZ2h0OjEuNWVtO3BhZGRpbmctdG9wOjAuNGVtO3BhZGRpbmctYm90dG9tOjAuOGVtO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5Ok9wZW4gU2Fucztmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWxcIj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+SGFycmlzLCBBLiwgJmFtcDsgR29vZGFsbCwgSi4gKDIwMDgpLiBEbyBwYXJlbnRzIGtub3cgdGhleSBtYXR0ZXI/IEVuZ2FnaW5nIGFsbCBwYXJlbnRzIGluIGxlYXJuaW5nLsKgPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MV81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5FZHVjYXRpb25hbCBSZXNlYXJjaDwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+LMKgPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MV81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj41MDwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+KDMpLCAyNzctMjg5LiA8L3NwYW4+PC9wPjxwIHN0eWxlPVwibGluZS1oZWlnaHQ6MS41ZW07cGFkZGluZy10b3A6MC40ZW07cGFkZGluZy1ib3R0b206MC44ZW07Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6T3BlbiBTYW5zO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbFwiPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5IZXJ6b2ctUHVuemVuYmVyZ2VyLCBCLiwgQWx0cmljaHRlciwgSC4sIEJyb3duLCBNLiwgQnVybnMsIEQuLCBOb3J0dmVkdCwgRy4gQS4sIFNrZWRzbW8sIEcuLCBXaWVzZSwgRS4sIE5heWlyLCBGLiwgRmVsbG5lciwgTS4sIE1jTmFtYXJhLCBHLiwgJmFtcDsgT+KAmUhhcmEsIEouICgyMDIwKS4gVGVhY2hlcnMgcmVzcG9uZGluZyB0byBjdWx0dXJhbCBkaXZlcnNpdHk6IENhc2Ugc3R1ZGllcyBvbiBhc3Nlc3NtZW50IHByYWN0aWNlcywgY2hhbGxlbmdlcyBhbmQgZXhwZXJpZW5jZXMgaW4gc2Vjb25kYXJ5IHNjaG9vbHMgaW4gQXVzdHJpYSwgSXJlbGFuZCwgTm9yd2F5IGFuZCBUdXJrZXkuIDwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDFfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+RWR1Y2F0aW9uYWwgQXNzZXNzbWVudCwgRXZhbHVhdGlvbiBhbmQgQWNjb3VudGFiaWxpdHksIDMyPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj4oMyksIDM5NeKAkzQyNC4gPC9zcGFuPjxhIHRpdGxlPVwiaHR0cHM6Ly9kb2kub3JnLzEwLjEwMDcvczExMDkyLTAyMC0wOTMzMC15XCIgaHJlZj1cImh0dHBzOi8vZG9pLm9yZy8xMC4xMDA3L3MxMTA5Mi0wMjAtMDkzMzAteVwiIHRhcmdldD1cIl9ibGFua1wiPjxzcGFuIHN0eWxlPVwidGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZSA7Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5odHRwczovL2RvaS5vcmcvMTAuMTAwNy9zMTEwOTItMDIwLTA5MzMwLXk8L3NwYW4+PC9hPjwvcD48cCBzdHlsZT1cImxpbmUtaGVpZ2h0OjEuNWVtO3BhZGRpbmctdG9wOjAuNGVtO3BhZGRpbmctYm90dG9tOjAuOGVtO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5Ok9wZW4gU2Fucztmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWxcIj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+SGVyem9nLVB1bnplbmJlcmdlciwgQi4sIEJyb3duLCBNLiwgQWx0cmljaHRlciwgSC4gJmFtcDsgR2FyZGV6aSwgUy4gKDIwMjIpLiBQcmVwYXJpbmcgVGVhY2hlcnMgZm9yIERpdmVyc2l0eTogSG93IGFyZSBUZWFjaGVyIEVkdWNhdGlvbiBTeXN0ZW1zIFJlc3BvbmRpbmcgdG8gPC9zcGFuPjxzcGFuIHN0eWxlPVwidGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZSA7Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5DdWx0dXJhbCBEaXZlcnNpdHkgPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj7igJPCoFRoZSBDYXNlIG9mIEF1c3RyaWEgYW5kIElyZWxhbmQuIDwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDFfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+VGVhY2hlcnMgYW5kIFRlYWNoaW5nOiBUaGVvcnkgYW5kIFByYWN0aWNlIDwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+KG9ubGluZSBmaXJzdCkuIDwvc3Bhbj48YSB0aXRsZT1cImh0dHA6Ly9keC5kb2kub3JnLzEwLjEwODAvMTM1NDA2MDIuMjAyMi4yMDYyNzM0XCIgaHJlZj1cImh0dHA6Ly9keC5kb2kub3JnLzEwLjEwODAvMTM1NDA2MDIuMjAyMi4yMDYyNzM0XCIgdGFyZ2V0PVwiX2JsYW5rXCI+PHNwYW4gc3R5bGU9XCJ0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lIDtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPmh0dHA6Ly9keC5kb2kub3JnLzEwLjEwODAvMTM1NDA2MDIuMjAyMi4yMDYyNzM0PC9zcGFuPjwvYT48L3A+PHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjVlbTtwYWRkaW5nLXRvcDowLjRlbTtwYWRkaW5nLWJvdHRvbTowLjhlbTtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpPcGVuIFNhbnM7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPkhveWxlLCBFLiAoMTk4MikuIE1pY3JvcG9saXRpY3Mgb2YgZWR1Y2F0aW9uYWwgb3JnYW5pemF0aW9ucy4gPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MV81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5FZHVjYXRpb25hbCBNYW5hZ2VtZW50IGFuZCBBZG1pbmlzdHJhdGlvbiwgMTA8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPigyKSwgODfigJM5OC48L3NwYW4+PC9wPjxwIHN0eWxlPVwibGluZS1oZWlnaHQ6MS41ZW07cGFkZGluZy10b3A6MC40ZW07cGFkZGluZy1ib3R0b206MC44ZW07Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6T3BlbiBTYW5zO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbFwiPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5DcmVuc2hhdywgSy4gKDE5ODkpLiBEZW1hcmdpbmFsaXppbmcgdGhlIEludGVyc2VjdGlvbiBvZiBSYWNlIGFuZCBTZXg6IEEgQmxhY2sgRmVtaW5pc3QgQ3JpdGlxdWUgb2YgQW50aWRpc2NyaW1pbmF0aW9uIERvY3RyaW5lLCBGZW1pbmlzdCBUaGVvcnkgYW5kIEFudGlyYWNpc3QgUG9saXRpY3MuIDwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDFfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+VW5pdmVyc2l0eSBvZiBDaGljYWdvIExlZ2FsIEZvcnVtLDwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+IDEsIDEzOS0xNjcuPC9zcGFuPjwvcD48cCBzdHlsZT1cImxpbmUtaGVpZ2h0OjEuNWVtO3BhZGRpbmctdG9wOjAuNGVtO3BhZGRpbmctYm90dG9tOjAuOGVtO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5Ok9wZW4gU2Fucztmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWxcIj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+S3Vzc2F1LCBKLiAmYW1wOyBCcsO8c2VtZWlzdGVyLCBULiAoMjAwNykuIEVkdWNhdGlvbmFsIEdvdmVybmFuY2U6IFp1ciBBbmFseXNlIGRlciBIYW5kbHVuZ3PCrWtvb3JkaW5hdGlvbiBpbSBNZWhyZWJlbmVuc3lzdGVtIGRlciBTY2h1bGUuIEluIEguIEFsdHJpY2h0ZXIsIFQuIEJyw7xzZW1laXN0ZXIgJmFtcDsgSi4gV2lzc2luZ2VyIChlZHMuKSwgPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MV81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5FZHVjYXRpb25hbCBHb3Zlcm5hbmNlIDwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+KHBwLiAxNeKAkzU0KS4gV2llc2JhZGVuOiBWUy48L3NwYW4+PC9wPjxwIHN0eWxlPVwibGluZS1oZWlnaHQ6MS41ZW07cGFkZGluZy10b3A6MC40ZW07cGFkZGluZy1ib3R0b206MC44ZW07Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6T3BlbiBTYW5zO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbFwiPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5MYWRzb24tQmlsbGluZ3MsIEcuICgxOTk1KS4gVG93YXJkIGEgdGhlb3J5IG9mIGN1bHR1cmFsbHkgcmVsZXZhbnQgdGVhY2hpbmcuIDwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDFfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+QW1lcmljYW4gRWR1Y2F0aW9uYWwgUmVzZWFyY2ggSm91cm5hbCwgMzI8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPigzKSwgNDY1LTQ5MS48L3NwYW4+PC9wPjxwIHN0eWxlPVwibGluZS1oZWlnaHQ6MS41ZW07cGFkZGluZy10b3A6MC40ZW07cGFkZGluZy1ib3R0b206MC44ZW07Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6T3BlbiBTYW5zO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbFwiPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5MYW5nZSwgUy4gJmFtcDsgU2NoaW1hbmssIFUuICgyMDA0KS4gR292ZXJuYW5jZSB1bmQgZ2VzZWxsc2NoYWZ0bGljaGUgSW50ZWdyYXRpb24uIEluIFMuIExhbmdlICZhbXA7IFUuIFNjaGltYW5rIChlZHMuKSwgPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MV81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5Hb3Zlcm5hbmNlIHVuZCBnZXNlbGxzY2hhZnRsaWNoZSBJbnRlZ3JhdGlvbiA8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPihwcC4gOS00NikuIFdpZXNiYWRlbjogVlMuIDwvc3Bhbj48L3A+PHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjVlbTtwYWRkaW5nLXRvcDowLjRlbTtwYWRkaW5nLWJvdHRvbTowLjhlbTtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPkxpbm5lbWFubiwgVC4sIE1lY2hlcmlsLCBQLiwgJmFtcDsgTmlrb2xlbmtvLCBBLiAoMjAxMykuIFJhc3Npc211c2tyaXRpay4gQmVncmlmZmxpY2hlIEdydW5kbGFnZW4gdW5kIEhhbmRsdW5nc3BlcnNwZWt0aXZlbiBpbiBkZXIgcG9saXRpc2NoZW4gQmlsZHVuZy4gWmVpdHNjaHJpZnQgZsO8ciBpbnRlcm5hdGlvbmFsZSBCaWxkdW5nc2ZvcnNjaHVuZyB1bmQgRW50d2lja2x1bmdzcMOkZGFnb2dpaywgMzYoMiksIDEwLTE0Ljwvc3Bhbj48L3A+PHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjVlbTtwYWRkaW5nLXRvcDowLjRlbTtwYWRkaW5nLWJvdHRvbTowLjhlbTtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpPcGVuIFNhbnM7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPkxpbm5lbWFubiwgVC4sIFdvamNpZWNob3dpY3osIEEuLCAmYW1wOyBZaWxpZ2luLCBGLiAoMjAxNikuIFZvbSBEZWZpeml0YmxpY2sgw7xiZXIgRGlmZmVyZW56ZGVua2VuIHp1ciBNYWNodGtyaXRpayDigJMgRWluIEJsaWNrIGF1ZiBww6RkYWdvZ2lzY2hlIEtvbnplcHRlIGluIGRlciBNaWdyYXRpb25zZ2VzZWxsc2NoYWZ0LiBJbiBJbmZvcm1hdGlvbnMtIHVuZCBEb2t1bWVudGF0aW9uc3plbnRydW0gZsO8ciBBbnRpcmFzc2lzbXVzYXJiZWl0IGluIE5vcmRyaGVpbi1XZXN0ZmFsZW4gKElEQS1OUlcpIChlZC4pLCA8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQxXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPktpbmRlci0gdW5kIEp1Z2VuZGFyYmVpdCB6dSByYXNzaXNtdXNrcml0aXNjaGVuIE9ydGVuIGVudHdpY2tlbG48L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPiAocHAuIDY1LTcxKTwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDFfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+Ljwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+IETDvHNzZWxkb3JmLjwvc3Bhbj48L3A+IiwiYSI6IjxwPkNlbnRyZSBmb3IgQ29tbXVuaXR5IEJhc2VkIFJlc2VhcmNoLCAoMjAxOSkuIDxpPkV2YWx1YXRpbmcgUmVmdWdlZSBQcm9ncmFtcy4gPC9pPkFjY2Vzc2VkIDMwIE5vdmVtYmVyIDIwMjAgZnJvbSBodHRwczovL3d3dy5ldmFsNHJlZnVnZWUuY2Evd2hhdC1pcy1jb21tdW5pdHktYmFzZWQtZXZhbHVhdGlvbjwvcD48cD5DaGFwbWFuLCBDLiAoMjAxOSkuIEZyb20gaGllcmFyY2hpZXMgdG8gbmV0d29ya3MuwqA8aT5Kb3VybmFsIG9mIEVkdWNhdGlvbmFsIEFkbWluaXN0cmF0aW9uLDwvaT4gPGk+NTc8L2k+KDUpLCA1NTQtNTcwLjwvcD48cD5DcnVsLCBNLiwgU2NobmVpZGVyLCBKLiwgJmFtcDsgTGVsaWUsIEYuICgyMDEyKSAoZWRzLikuIDxpPlRoZSBFdXJvcGVhbiBTZWNvbmQgR2VuZXJhdGlvbiBDb21wYXJlZC4gRG9lcyB0aGUgSW50ZWdyYXRpb24gQ29udGV4dCBNYXR0ZXI/PC9pPiBSZXRyaWV2ZWQgRmVicnVhcnksIDl0aCwgMjAyMCBmcm9tIDxhIHRpdGxlPVwiaHR0cDovL3d3dy50aWVzcHJvamVjdC5ldS9jb21wb25lbnQvb3B0aW9uLGNvbV9kb2NtYW4vdGFzayxjYXRfdmlldy9naWQsNDQvSXRlbWlkLDE0Mi9cIiBocmVmPVwiaHR0cDovL3d3dy50aWVzcHJvamVjdC5ldS9jb21wb25lbnQvb3B0aW9uLGNvbV9kb2NtYW4vdGFzayxjYXRfdmlldy9naWQsNDQvSXRlbWlkLDE0Mi9cIiB0YXJnZXQ9XCJfYmxhbmtcIj48dT5odHRwOi8vd3d3LnRpZXNwcm9qZWN0LmV1L2NvbXBvbmVudC9vcHRpb24sY29tX2RvY21hbi90YXNrLGNhdF92aWV3L2dpZCw0NC9JdGVtaWQsMTQyLzwvdT48L2E+PC9wPjxwPkRlc2ZvcmdlcywgQy4sICZhbXA7IEFib3VjaGFhciwgQS4gKDIwMDMpLsKgPGk+VGhlIGltcGFjdCBvZiBwYXJlbnRhbCBpbnZvbHZlbWVudCwgcGFyZW50YWwgc3VwcG9ydCBhbmQgZmFtaWx5IGVkdWNhdGlvbiBvbiBwdXBpbCBhY2hpZXZlbWVudCBhbmQgYWRqdXN0bWVudDogQSBsaXRlcmF0dXJlIHJldmlldzwvaT7CoChWb2wuIDQzMykuIExvbmRvbjogRGZFUy48L3A+PHA+RmVsZG1hbiwgQS4sIEFsdHJpY2h0ZXIsIEguLCBQb3NjaCwgUC4gJmFtcDsgU29tZWtoLCBCLiAoMjAxOCkuIDxpPlRlYWNoZXJzIEludmVzdGlnYXRlIHRoZWlyIFdvcmsuPC9pPiAzPHN1cD5yZDwvc3VwPiBlZGl0aW9uLiBMb25kb24gJmFtcDsgTmV3IFlvcms6IFJvdXRsZWRnZS4gPC9wPjxwPkZvcmQsIEQuIFkuLCAmYW1wOyBLZWEsIEMuIEQuICgyMDA5KS4gQ3JlYXRpbmcgY3VsdHVyYWxseSByZXNwb25zaXZlIGluc3RydWN0aW9uOiBGb3Igc3R1ZGVudHPigJkgc2FrZSBhbmQgdGVhY2hlcnPigJkgc2FrZS4gPGk+Rm9jdXMgb24gRXhjZXB0aW9uYWwgQ2hpbGRyZW48L2k+LCAoNDEpLCAxLTE4LjwvcD48cD5HYXksIEcuICgyMDEwKS4gQ3VsdHVyYWxseSByZXNwb25zaXZlIHRlYWNoaW5nOiBUaGVvcnksIHJlc2VhcmNoLCBhbmQgcHJhY3RpY2UgKDJuZCBlZC4pLiBOZXcgWW9yaywgTlk6IFRlYWNoZXJzIENvbGxlZ2UgUHJlc3MuPC9wPjxwPkhhZGZpZWxkLCBNLiAmYW1wOyBKb3BsaW5nLCBNLiAoMjAxMSkuIDxpPk5ldHdvcmtpbmcgYW5kIGNvbGxhYm9yYXRpb24gaW4gdXJiYW4gY29udGV4dHMgaW4gRW5nbGFuZDogVGhlIHByb2JsZW1zIGFuZCBwb3NzaWJpbGl0aWVzIG9mIHdvcmtpbmcgdG9nZXRoZXIgdG8gaW1wcm92ZSBzb2NpYWwgaW5jbHVzaW9uPC9pPi4gUGFwZXIgZ2l2ZW4gYXQgdGhlIEVDRVItQ29uZmVyZW5jZSAyMDExLCBCZXJsaW4uPC9wPjxwPkhhcnJpcywgQS4sICZhbXA7IEdvb2RhbGwsIEouICgyMDA4KS4gRG8gcGFyZW50cyBrbm93IHRoZXkgbWF0dGVyPyBFbmdhZ2luZyBhbGwgcGFyZW50cyBpbiBsZWFybmluZy7CoDxpPkVkdWNhdGlvbmFsIFJlc2VhcmNoPC9pPizCoDxpPjUwPC9pPigzKSwgMjc3LTI4OS4gPC9wPjxwPkhlcnpvZy1QdW56ZW5iZXJnZXIsIEIuLCBBbHRyaWNodGVyLCBILiwgQnJvd24sIE0uLCBCdXJucywgRC4sIE5vcnR2ZWR0LCBHLiBBLiwgU2tlZHNtbywgRy4sIFdpZXNlLCBFLiwgTmF5aXIsIEYuLCBGZWxsbmVyLCBNLiwgTWNOYW1hcmEsIEcuLCAmYW1wOyBP4oCZSGFyYSwgSi4gKDIwMjApLiBUZWFjaGVycyByZXNwb25kaW5nIHRvIGN1bHR1cmFsIGRpdmVyc2l0eTogQ2FzZSBzdHVkaWVzIG9uIGFzc2Vzc21lbnQgcHJhY3RpY2VzLCBjaGFsbGVuZ2VzIGFuZCBleHBlcmllbmNlcyBpbiBzZWNvbmRhcnkgc2Nob29scyBpbiBBdXN0cmlhLCBJcmVsYW5kLCBOb3J3YXkgYW5kIFR1cmtleS4gPGk+RWR1Y2F0aW9uYWwgQXNzZXNzbWVudCwgRXZhbHVhdGlvbiBhbmQgQWNjb3VudGFiaWxpdHksIDMyPC9pPigzKSwgMzk14oCTNDI0LiA8YSB0aXRsZT1cImh0dHBzOi8vZG9pLm9yZy8xMC4xMDA3L3MxMTA5Mi0wMjAtMDkzMzAteVwiIGhyZWY9XCJodHRwczovL2RvaS5vcmcvMTAuMTAwNy9zMTEwOTItMDIwLTA5MzMwLXlcIiB0YXJnZXQ9XCJfYmxhbmtcIj48dT5odHRwczovL2RvaS5vcmcvMTAuMTAwNy9zMTEwOTItMDIwLTA5MzMwLXk8L3U+PC9hPjwvcD48cD5IZXJ6b2ctUHVuemVuYmVyZ2VyLCBCLiwgQnJvd24sIE0uLCBBbHRyaWNodGVyLCBILiAmYW1wOyBHYXJkZXppLCBTLiAoMjAyMikuIFByZXBhcmluZyBUZWFjaGVycyBmb3IgRGl2ZXJzaXR5OiBIb3cgYXJlIFRlYWNoZXIgRWR1Y2F0aW9uIFN5c3RlbXMgUmVzcG9uZGluZyB0byA8dT5DdWx0dXJhbCBEaXZlcnNpdHkgPC91PuKAk8KgVGhlIENhc2Ugb2YgQXVzdHJpYSBhbmQgSXJlbGFuZC4gPGk+VGVhY2hlcnMgYW5kIFRlYWNoaW5nOiBUaGVvcnkgYW5kIFByYWN0aWNlIDwvaT4ob25saW5lIGZpcnN0KS4gPGEgdGl0bGU9XCJodHRwOi8vZHguZG9pLm9yZy8xMC4xMDgwLzEzNTQwNjAyLjIwMjIuMjA2MjczNFwiIGhyZWY9XCJodHRwOi8vZHguZG9pLm9yZy8xMC4xMDgwLzEzNTQwNjAyLjIwMjIuMjA2MjczNFwiIHRhcmdldD1cIl9ibGFua1wiPjx1Pmh0dHA6Ly9keC5kb2kub3JnLzEwLjEwODAvMTM1NDA2MDIuMjAyMi4yMDYyNzM0PC91PjwvYT48L3A+PHA+SG95bGUsIEUuICgxOTgyKS4gTWljcm9wb2xpdGljcyBvZiBlZHVjYXRpb25hbCBvcmdhbml6YXRpb25zLiA8aT5FZHVjYXRpb25hbCBNYW5hZ2VtZW50IGFuZCBBZG1pbmlzdHJhdGlvbiwgMTA8L2k+KDIpLCA4N+KAkzk4LjwvcD48cD5DcmVuc2hhdywgSy4gKDE5ODkpLiBEZW1hcmdpbmFsaXppbmcgdGhlIEludGVyc2VjdGlvbiBvZiBSYWNlIGFuZCBTZXg6IEEgQmxhY2sgRmVtaW5pc3QgQ3JpdGlxdWUgb2YgQW50aWRpc2NyaW1pbmF0aW9uIERvY3RyaW5lLCBGZW1pbmlzdCBUaGVvcnkgYW5kIEFudGlyYWNpc3QgUG9saXRpY3MuIDxpPlVuaXZlcnNpdHkgb2YgQ2hpY2FnbyBMZWdhbCBGb3J1bSw8L2k+IDEsIDEzOS0xNjcuPC9wPjxwPkt1c3NhdSwgSi4gJmFtcDsgQnLDvHNlbWVpc3RlciwgVC4gKDIwMDcpLiBFZHVjYXRpb25hbCBHb3Zlcm5hbmNlOiBadXIgQW5hbHlzZSBkZXIgSGFuZGx1bmdzwq1rb29yZGluYXRpb24gaW0gTWVocmViZW5lbnN5c3RlbSBkZXIgU2NodWxlLiBJbiBILiBBbHRyaWNodGVyLCBULiBCcsO8c2VtZWlzdGVyICZhbXA7IEouIFdpc3NpbmdlciAoZWRzLiksIDxpPkVkdWNhdGlvbmFsIEdvdmVybmFuY2UgPC9pPihwcC4gMTXigJM1NCkuIFdpZXNiYWRlbjogVlMuPC9wPjxwPkxhZHNvbi1CaWxsaW5ncywgRy4gKDE5OTUpLiBUb3dhcmQgYSB0aGVvcnkgb2YgY3VsdHVyYWxseSByZWxldmFudCB0ZWFjaGluZy4gPGk+QW1lcmljYW4gRWR1Y2F0aW9uYWwgUmVzZWFyY2ggSm91cm5hbCwgMzI8L2k+KDMpLCA0NjUtNDkxLjwvcD48cD5MYW5nZSwgUy4gJmFtcDsgU2NoaW1hbmssIFUuICgyMDA0KS4gR292ZXJuYW5jZSB1bmQgZ2VzZWxsc2NoYWZ0bGljaGUgSW50ZWdyYXRpb24uIEluIFMuIExhbmdlICZhbXA7IFUuIFNjaGltYW5rIChlZHMuKSwgPGk+R292ZXJuYW5jZSB1bmQgZ2VzZWxsc2NoYWZ0bGljaGUgSW50ZWdyYXRpb24gPC9pPihwcC4gOS00NikuIFdpZXNiYWRlbjogVlMuIDwvcD48cD5MaW5uZW1hbm4sIFQuLCBNZWNoZXJpbCwgUC4sICZhbXA7IE5pa29sZW5rbywgQS4gKDIwMTMpLiBSYXNzaXNtdXNrcml0aWsuIEJlZ3JpZmZsaWNoZSBHcnVuZGxhZ2VuIHVuZCBIYW5kbHVuZ3NwZXJzcGVrdGl2ZW4gaW4gZGVyIHBvbGl0aXNjaGVuIEJpbGR1bmcuIFplaXRzY2hyaWZ0IGbDvHIgaW50ZXJuYXRpb25hbGUgQmlsZHVuZ3Nmb3JzY2h1bmcgdW5kIEVudHdpY2tsdW5nc3DDpGRhZ29naWssIDM2KDIpLCAxMC0xNC48L3A+PHA+TGlubmVtYW5uLCBULiwgV29qY2llY2hvd2ljeiwgQS4sICZhbXA7IFlpbGlnaW4sIEYuICgyMDE2KS4gVm9tIERlZml6aXRibGljayDDvGJlciBEaWZmZXJlbnpkZW5rZW4genVyIE1hY2h0a3JpdGlrIOKAkyBFaW4gQmxpY2sgYXVmIHDDpGRhZ29naXNjaGUgS29uemVwdGUgaW4gZGVyIE1pZ3JhdGlvbnNnZXNlbGxzY2hhZnQuIEluIEluZm9ybWF0aW9ucy0gdW5kIERva3VtZW50YXRpb25zemVudHJ1bSBmw7xyIEFudGlyYXNzaXNtdXNhcmJlaXQgaW4gTm9yZHJoZWluLVdlc3RmYWxlbiAoSURBLU5SVykgKGVkLiksIDxpPktpbmRlci0gdW5kIEp1Z2VuZGFyYmVpdCB6dSByYXNzaXNtdXNrcml0aXNjaGVuIE9ydGVuIGVudHdpY2tlbG48L2k+IChwcC4gNjUtNzEpPGk+LjwvaT4gRMO8c3NlbGRvcmYuPC9wPiIsInIiOltdLCJkIjpbIkNlbnRyZSBmb3IgQ29tbXVuaXR5IEJhc2VkIFJlc2VhcmNoLCAoMjAxOSkuIEV2YWx1YXRpbmcgUmVmdWdlZSBQcm9ncmFtcy4gQWNjZXNzZWQgMzAgTm92ZW1iZXIgMjAyMCBmcm9tIGh0dHBzOi8vd3d3LmV2YWw0cmVmdWdlZS5jYS93aGF0LWlzLWNvbW11bml0eS1iYXNlZC1ldmFsdWF0aW9uXG5DaGFwbWFuLCBDLiAoMjAxOSkuIEZyb20gaGllcmFyY2hpZXMgdG8gbmV0d29ya3MuwqBKb3VybmFsIG9mIEVkdWNhdGlvbmFsIEFkbWluaXN0cmF0aW9uLCA1Nyg1KSwgNTU0LTU3MC5cbkNydWwsIE0uLCBTY2huZWlkZXIsIEouLCAmIExlbGllLCBGLiAoMjAxMikgKGVkcy4pLiBUaGUgRXVyb3BlYW4gU2Vjb25kIEdlbmVyYXRpb24gQ29tcGFyZWQuIERvZXMgdGhlIEludGVncmF0aW9uIENvbnRleHQgTWF0dGVyPyBSZXRyaWV2ZWQgRmVicnVhcnksIDl0aCwgMjAyMCBmcm9tIGh0dHA6Ly93d3cudGllc3Byb2plY3QuZXUvY29tcG9uZW50L29wdGlvbixjb21fZG9jbWFuL3Rhc2ssY2F0X3ZpZXcvZ2lkLDQ0L0l0ZW1pZCwxNDIvXG5EZXNmb3JnZXMsIEMuLCAmIEFib3VjaGFhciwgQS4gKDIwMDMpLsKgVGhlIGltcGFjdCBvZiBwYXJlbnRhbCBpbnZvbHZlbWVudCwgcGFyZW50YWwgc3VwcG9ydCBhbmQgZmFtaWx5IGVkdWNhdGlvbiBvbiBwdXBpbCBhY2hpZXZlbWVudCBhbmQgYWRqdXN0bWVudDogQSBsaXRlcmF0dXJlIHJldmlld8KgKFZvbC4gNDMzKS4gTG9uZG9uOiBEZkVTLlxuRmVsZG1hbiwgQS4sIEFsdHJpY2h0ZXIsIEguLCBQb3NjaCwgUC4gJiBTb21la2gsIEIuICgyMDE4KS4gVGVhY2hlcnMgSW52ZXN0aWdhdGUgdGhlaXIgV29yay4gM3JkIGVkaXRpb24uIExvbmRvbiAmIE5ldyBZb3JrOiBSb3V0bGVkZ2UuIFxuRm9yZCwgRC4gWS4sICYgS2VhLCBDLiBELiAoMjAwOSkuIENyZWF0aW5nIGN1bHR1cmFsbHkgcmVzcG9uc2l2ZSBpbnN0cnVjdGlvbjogRm9yIHN0dWRlbnRz4oCZIHNha2UgYW5kIHRlYWNoZXJz4oCZIHNha2UuIEZvY3VzIG9uIEV4Y2VwdGlvbmFsIENoaWxkcmVuLCAoNDEpLCAxLTE4LlxuR2F5LCBHLiAoMjAxMCkuIEN1bHR1cmFsbHkgcmVzcG9uc2l2ZSB0ZWFjaGluZzogVGhlb3J5LCByZXNlYXJjaCwgYW5kIHByYWN0aWNlICgybmQgZWQuKS4gTmV3IFlvcmssIE5ZOiBUZWFjaGVycyBDb2xsZWdlIFByZXNzLlxuSGFkZmllbGQsIE0uICYgSm9wbGluZywgTS4gKDIwMTEpLiBOZXR3b3JraW5nIGFuZCBjb2xsYWJvcmF0aW9uIGluIHVyYmFuIGNvbnRleHRzIGluIEVuZ2xhbmQ6IFRoZSBwcm9ibGVtcyBhbmQgcG9zc2liaWxpdGllcyBvZiB3b3JraW5nIHRvZ2V0aGVyIHRvIGltcHJvdmUgc29jaWFsIGluY2x1c2lvbi4gUGFwZXIgZ2l2ZW4gYXQgdGhlIEVDRVItQ29uZmVyZW5jZSAyMDExLCBCZXJsaW4uXG5IYXJyaXMsIEEuLCAmIEdvb2RhbGwsIEouICgyMDA4KS4gRG8gcGFyZW50cyBrbm93IHRoZXkgbWF0dGVyPyBFbmdhZ2luZyBhbGwgcGFyZW50cyBpbiBsZWFybmluZy7CoEVkdWNhdGlvbmFsIFJlc2VhcmNoLMKgNTAoMyksIDI3Ny0yODkuIFxuSGVyem9nLVB1bnplbmJlcmdlciwgQi4sIEFsdHJpY2h0ZXIsIEguLCBCcm93biwgTS4sIEJ1cm5zLCBELiwgTm9ydHZlZHQsIEcuIEEuLCBTa2Vkc21vLCBHLiwgV2llc2UsIEUuLCBOYXlpciwgRi4sIEZlbGxuZXIsIE0uLCBNY05hbWFyYSwgRy4sICYgT+KAmUhhcmEsIEouICgyMDIwKS4gVGVhY2hlcnMgcmVzcG9uZGluZyB0byBjdWx0dXJhbCBkaXZlcnNpdHk6IENhc2Ugc3R1ZGllcyBvbiBhc3Nlc3NtZW50IHByYWN0aWNlcywgY2hhbGxlbmdlcyBhbmQgZXhwZXJpZW5jZXMgaW4gc2Vjb25kYXJ5IHNjaG9vbHMgaW4gQXVzdHJpYSwgSXJlbGFuZCwgTm9yd2F5IGFuZCBUdXJrZXkuIEVkdWNhdGlvbmFsIEFzc2Vzc21lbnQsIEV2YWx1YXRpb24gYW5kIEFjY291bnRhYmlsaXR5LCAzMigzKSwgMzk14oCTNDI0LiBodHRwczovL2RvaS5vcmcvMTAuMTAwNy9zMTEwOTItMDIwLTA5MzMwLXlcbkhlcnpvZy1QdW56ZW5iZXJnZXIsIEIuLCBCcm93biwgTS4sIEFsdHJpY2h0ZXIsIEguICYgR2FyZGV6aSwgUy4gKDIwMjIpLiBQcmVwYXJpbmcgVGVhY2hlcnMgZm9yIERpdmVyc2l0eTogSG93IGFyZSBUZWFjaGVyIEVkdWNhdGlvbiBTeXN0ZW1zIFJlc3BvbmRpbmcgdG8gQ3VsdHVyYWwgRGl2ZXJzaXR5IOKAk8KgVGhlIENhc2Ugb2YgQXVzdHJpYSBhbmQgSXJlbGFuZC4gVGVhY2hlcnMgYW5kIFRlYWNoaW5nOiBUaGVvcnkgYW5kIFByYWN0aWNlIChvbmxpbmUgZmlyc3QpLiBodHRwOi8vZHguZG9pLm9yZy8xMC4xMDgwLzEzNTQwNjAyLjIwMjIuMjA2MjczNFxuSG95bGUsIEUuICgxOTgyKS4gTWljcm9wb2xpdGljcyBvZiBlZHVjYXRpb25hbCBvcmdhbml6YXRpb25zLiBFZHVjYXRpb25hbCBNYW5hZ2VtZW50IGFuZCBBZG1pbmlzdHJhdGlvbiwgMTAoMiksIDg34oCTOTguXG5DcmVuc2hhdywgSy4gKDE5ODkpLiBEZW1hcmdpbmFsaXppbmcgdGhlIEludGVyc2VjdGlvbiBvZiBSYWNlIGFuZCBTZXg6IEEgQmxhY2sgRmVtaW5pc3QgQ3JpdGlxdWUgb2YgQW50aWRpc2NyaW1pbmF0aW9uIERvY3RyaW5lLCBGZW1pbmlzdCBUaGVvcnkgYW5kIEFudGlyYWNpc3QgUG9saXRpY3MuIFVuaXZlcnNpdHkgb2YgQ2hpY2FnbyBMZWdhbCBGb3J1bSwgMSwgMTM5LTE2Ny5cbkt1c3NhdSwgSi4gJiBCcsO8c2VtZWlzdGVyLCBULiAoMjAwNykuIEVkdWNhdGlvbmFsIEdvdmVybmFuY2U6IFp1ciBBbmFseXNlIGRlciBIYW5kbHVuZ3PCrWtvb3JkaW5hdGlvbiBpbSBNZWhyZWJlbmVuc3lzdGVtIGRlciBTY2h1bGUuIEluIEguIEFsdHJpY2h0ZXIsIFQuIEJyw7xzZW1laXN0ZXIgJiBKLiBXaXNzaW5nZXIgKGVkcy4pLCBFZHVjYXRpb25hbCBHb3Zlcm5hbmNlIChwcC4gMTXigJM1NCkuIFdpZXNiYWRlbjogVlMuXG5MYWRzb24tQmlsbGluZ3MsIEcuICgxOTk1KS4gVG93YXJkIGEgdGhlb3J5IG9mIGN1bHR1cmFsbHkgcmVsZXZhbnQgdGVhY2hpbmcuIEFtZXJpY2FuIEVkdWNhdGlvbmFsIFJlc2VhcmNoIEpvdXJuYWwsIDMyKDMpLCA0NjUtNDkxLlxuTGFuZ2UsIFMuICYgU2NoaW1hbmssIFUuICgyMDA0KS4gR292ZXJuYW5jZSB1bmQgZ2VzZWxsc2NoYWZ0bGljaGUgSW50ZWdyYXRpb24uIEluIFMuIExhbmdlICYgVS4gU2NoaW1hbmsgKGVkcy4pLCBHb3Zlcm5hbmNlIHVuZCBnZXNlbGxzY2hhZnRsaWNoZSBJbnRlZ3JhdGlvbiAocHAuIDktNDYpLiBXaWVzYmFkZW46IFZTLiBcbkxpbm5lbWFubiwgVC4sIE1lY2hlcmlsLCBQLiwgJiBOaWtvbGVua28sIEEuICgyMDEzKS4gUmFzc2lzbXVza3JpdGlrLiBCZWdyaWZmbGljaGUgR3J1bmRsYWdlbiB1bmQgSGFuZGx1bmdzcGVyc3Bla3RpdmVuIGluIGRlciBwb2xpdGlzY2hlbiBCaWxkdW5nLiBaZWl0c2NocmlmdCBmw7xyIGludGVybmF0aW9uYWxlIEJpbGR1bmdzZm9yc2NodW5nIHVuZCBFbnR3aWNrbHVuZ3Nww6RkYWdvZ2lrLCAzNigyKSwgMTAtMTQuXG5MaW5uZW1hbm4sIFQuLCBXb2pjaWVjaG93aWN6LCBBLiwgJiBZaWxpZ2luLCBGLiAoMjAxNikuIFZvbSBEZWZpeml0YmxpY2sgw7xiZXIgRGlmZmVyZW56ZGVua2VuIHp1ciBNYWNodGtyaXRpayDigJMgRWluIEJsaWNrIGF1ZiBww6RkYWdvZ2lzY2hlIEtvbnplcHRlIGluIGRlciBNaWdyYXRpb25zZ2VzZWxsc2NoYWZ0LiBJbiBJbmZvcm1hdGlvbnMtIHVuZCBEb2t1bWVudGF0aW9uc3plbnRydW0gZsO8ciBBbnRpcmFzc2lzbXVzYXJiZWl0IGluIE5vcmRyaGVpbi1XZXN0ZmFsZW4gKElEQS1OUlcpIChlZC4pLCBLaW5kZXItIHVuZCBKdWdlbmRhcmJlaXQgenUgcmFzc2lzbXVza3JpdGlzY2hlbiBPcnRlbiBlbnR3aWNrZWxuIChwcC4gNjUtNzEpLiBEw7xzc2VsZG9yZi4iXX0sInRwIjoiaXRlbSJ9LHsiaSI6ImlhbG1uZGwzZ3Z2MyIsInQiOnsiaCI6IjxwIHN0eWxlPVwibGluZS1oZWlnaHQ6MS4xNWVtO3BhZGRpbmctdG9wOjBlbTtwYWRkaW5nLWJvdHRvbTowZW07Zm9udC1zaXplOjI0cHg7Zm9udC1mYW1pbHk6Zm50M181MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbFwiPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjI0cHg7Zm9udC1mYW1pbHk6Zm50M181MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5NLVM8L3NwYW4+PC9wPiIsImEiOiI8cD48Yj5NLVM8L2I+PC9wPiIsInIiOltdLCJkIjpbIk0tUyJdfSwiYyI6eyJoIjoiPHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjVlbTtwYWRkaW5nLXRvcDowLjRlbTtwYWRkaW5nLWJvdHRvbTowLjhlbTtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpPcGVuIFNhbnM7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJ0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lIDtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPk1lY2hlcmlsPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj4sIFAuLCBDYXN0cm8gVmFyZWxhLCBNLiwgRGlyaW0sIEkuLCBLYWxwYWthLCBBLiAmYW1wOyBNZWx0ZXIsIEMuICgyMDEwKS4gPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MV81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5NaWdyYXRpb25zcMOkZGFnb2dpay48L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPiBXZWluaGVpbTogQmVsdHouIOKAiyDigIsgPC9zcGFuPjwvcD48cCBzdHlsZT1cImxpbmUtaGVpZ2h0OjEuNWVtO3BhZGRpbmctdG9wOjAuNGVtO3BhZGRpbmctYm90dG9tOjAuOGVtO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5Ok9wZW4gU2Fucztmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWxcIj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+TWVjaGVyaWwsIFAuICgyMDE2KTogTWlncmF0aW9uc3DDpGRhZ29naWsg4oCTIGVpbiBQcm9qZWt0LiBJbiBQLiBNZWNoZXJpbCAoZWQuKSwgPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MV81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5IYW5kYnVjaCBNaWdyYXRpb25zcMOkZGFnb2dpazwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+IChwcC4gOC0zMC4pLiBXZWluaGVpbTogQmVsdHouIDwvc3Bhbj48L3A+PHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjVlbTtwYWRkaW5nLXRvcDowLjRlbTtwYWRkaW5nLWJvdHRvbTowLjhlbTtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPk1lY2hlcmlsLCBQLiAmYW1wOyBNZWx0ZXIsIEMuICgyMDEwKS4gR2V3w7ZobmxpY2hlIFVudGVyc2NoZWlkdW5nZW4uIFdlZ2UgYXVzIGRlbSBSYXNzaXNtdXMuIEluIFMuIEFuZHJlc2VuLCBLLiBIdXJyZWxtYW5uLCBDLiBQYWxlbnRpZW4gJmFtcDsgVy4gU2NocsO2ZXIgKGVkcy4pLCBNaWdyYXRpb25zcMOkZGFnb2dpayAocHAuIDE1MC0xNzgpLiBXZWluaGVpbSB1bmQgQmFzZWw6IEJlbHR6Ljwvc3Bhbj48L3A+PHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjVlbTtwYWRkaW5nLXRvcDowLjRlbTtwYWRkaW5nLWJvdHRvbTowLjhlbTtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPk11aWppLDIwMTc8L3NwYW4+PC9wPjxwIHN0eWxlPVwibGluZS1oZWlnaHQ6MS41ZW07cGFkZGluZy10b3A6MC40ZW07cGFkZGluZy1ib3R0b206MC44ZW07Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6T3BlbiBTYW5zO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbFwiPjxzcGFuIHN0eWxlPVwidGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZSA7Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5OYXphcmtpZXdpY3osIEsuICZhbXA7IEtyw6RtZXIsIEcuICgyMDEzKTwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+LiBJbnRlcmt1bHR1cmVsbCwgbXVsdGlrdWx0dXJlbGwsIHRyYW5za3VsdHVyZWxsOiBLdWx0dXIoZW4pIGluIEJlZ2xlaXRwcm96ZXNzZW4gc3lzdGVtYXRpc2NoIGJlcsO8Y2tzaWNodGlnZW4uIDwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDFfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+S29udGV4dCwgNDQ8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPigxKSwgMjIg4oCTIDQwLjwvc3Bhbj48L3A+PHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjVlbTtwYWRkaW5nLXRvcDowLjRlbTtwYWRkaW5nLWJvdHRvbTowLjhlbTtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPk5ndXllbiwgVC4gUS4gKDIwMTQpLiDigJ5PZmZlbnNpY2h0bGljaCB1bmQgenVnZWRlY2t04oCcLSBBbGx0YWdzcmFzc2lzbXVzIGluIERldXRzY2hsYW5kLiBCdW5kZXN6ZW50cmFsZSBmw7xyIHBvbGl0aXNjaGUgQmlsZHVuZyA8L3NwYW4+PGEgdGl0bGU9XCJodHRwczovL3d3dy5icGIuZGUvZGlhbG9nLzE5NDU2OS9vZmZlbnNpY2h0bGljaC11bmQtenVnZWRlY2t0LWFsbHRhZ3NyYXNzaXNtdXMtaW4tZGV1dHNjaGxhbmRcIiBocmVmPVwiaHR0cHM6Ly93d3cuYnBiLmRlL2RpYWxvZy8xOTQ1Njkvb2ZmZW5zaWNodGxpY2gtdW5kLXp1Z2VkZWNrdC1hbGx0YWdzcmFzc2lzbXVzLWluLWRldXRzY2hsYW5kXCIgdGFyZ2V0PVwiX2JsYW5rXCI+PHNwYW4gc3R5bGU9XCJ0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lIDtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPmh0dHBzOi8vd3d3LmJwYi5kZS9kaWFsb2cvMTk0NTY5L29mZmVuc2ljaHRsaWNoLXVuZC16dWdlZGVja3QtYWxsdGFnc3Jhc3Npc211cy1pbi1kZXV0c2NobGFuZDwvc3Bhbj48L2E+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPiAoMDIuMDEuMjAyMik8L3NwYW4+PC9wPjxwIHN0eWxlPVwibGluZS1oZWlnaHQ6MS41ZW07cGFkZGluZy10b3A6MC40ZW07cGFkZGluZy1ib3R0b206MC44ZW07Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6T3BlbiBTYW5zO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbFwiPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5PRUNEICgyMDA5KS4gPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MV81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5PRUNEIFRvb2xraXQgb24gVGVhY2hpbmcgZm9yIERpdmVyc2l0eS4gZm9yIFRlYWNoaW5nIG9uIERpdmVyc2l0eS4gPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5SZXRyaWV2ZWQgU2VwdGVtYmVyLCA1dGgsIDIwMTkgZnJvbSA8L3NwYW4+PGEgdGl0bGU9XCJodHRwOi8vd3d3Lm9lY2Qub3JnL2dlbmVyYWwvc2VhcmNocmVzdWx0cy8/cT1Ub29sa2l0JTIwZm9yJTIwdGVhY2hlcnMlMjBvZiUyMGRpdmVyc2l0eVwiIGhyZWY9XCJodHRwOi8vd3d3Lm9lY2Qub3JnL2dlbmVyYWwvc2VhcmNocmVzdWx0cy8/cT1Ub29sa2l0JTIwZm9yJTIwdGVhY2hlcnMlMjBvZiUyMGRpdmVyc2l0eVwiIHRhcmdldD1cIl9ibGFua1wiPjxzcGFuIHN0eWxlPVwidGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZSA7Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5odHRwOi8vd3d3Lm9lY2Qub3JnL2dlbmVyYWwvc2VhcmNocmVzdWx0cy8/cT1Ub29sa2l0JTIwZm9yJTIwdGVhY2hlcnMlMjBvZiUyMGRpdmVyc2l0eTwvc3Bhbj48L2E+PC9wPjxwIHN0eWxlPVwibGluZS1oZWlnaHQ6MS41ZW07cGFkZGluZy10b3A6MC40ZW07cGFkZGluZy1ib3R0b206MC44ZW07Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6T3BlbiBTYW5zO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbFwiPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5PRUNEICgyMDE2KS4gPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MV81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5HbG9iYWwgY29tcGV0ZW5jeSBmb3IgYW4gaW5jbHVzaXZlIHdvcmxkLjwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+IFBhcmlzOiBPRUNELjwvc3Bhbj48L3A+PHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjVlbTtwYWRkaW5nLXRvcDowLjRlbTtwYWRkaW5nLWJvdHRvbTowLjhlbTtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpPcGVuIFNhbnM7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPk9FQ0QgKDIwMTkpLiA8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQxXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPlRBTElTIDIwMTggUmVzdWx0cyAoVm9sLiBJKTogVGVhY2hlcnMgYW5kIFNjaG9vbCBMZWFkZXJzIGFzIExpZmVsb25nIExlYXJuZXJzLjwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+IFBhcmlzOiBPRUNELjwvc3Bhbj48L3A+PHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjVlbTtwYWRkaW5nLXRvcDowLjRlbTtwYWRkaW5nLWJvdHRvbTowLjhlbTtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpPcGVuIFNhbnM7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPk8mIzM5O0hhcmEsIEouLCBCcm93biwgTS4sIE1jTmFtYXJhLCBHLiwgJmFtcDsgU2hldmxpbiwgUC4gKDIwMjApLiBUaGUgcG90ZW50aWFsLCBsaW1pdGF0aW9ucyBhbmQgZXZhbHVhdGlvbiBvZiBlZHVjYXRpb24gbmV0d29ya3MgaW4gYSBtb25vY2VudHJpYyBzeXN0ZW0uIDwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDFfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+UmV2aXN0YSBkZSBJbnZlc3RpZ2FjacOzbiBFZHVjYXRpdmE8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPsKgMzgsIG5vLiAxLCDigIsgMzMtNTIuPC9zcGFuPjwvcD48cCBzdHlsZT1cImxpbmUtaGVpZ2h0OjEuNWVtO3BhZGRpbmctdG9wOjAuNGVtO3BhZGRpbmctYm90dG9tOjAuOGVtO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5Ok9wZW4gU2Fucztmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWxcIj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+UG92ZXksIEouLCBDYW1wYmVsbCwgQS4gSy4sIFdpbGxpcywgTC4gRC4sIEhheW5lcywgTS4sIFdlc3Rlcm4sIE0uLCBCZW5uZXR0LCBTLiwgLi4uICZhbXA7IFBlZGRlLCBDLiAoMjAxNikuIEVuZ2FnaW5nIHBhcmVudHMgaW4gc2Nob29scyBhbmQgYnVpbGRpbmcgcGFyZW50LXNjaG9vbCBwYXJ0bmVyc2hpcHM6IFRoZSByb2xlIG9mIHNjaG9vbCBhbmQgcGFyZW50IG9yZ2FuaXNhdGlvbiBsZWFkZXJzaGlwLsKgPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MV81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5JbnRlcm5hdGlvbmFsIEpvdXJuYWwgb2YgRWR1Y2F0aW9uYWwgUmVzZWFyY2g8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPizCoDwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDFfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+Nzk8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPiwgMTI4LTE0MS48L3NwYW4+PC9wPjxwIHN0eWxlPVwibGluZS1oZWlnaHQ6MS41ZW07cGFkZGluZy10b3A6MC40ZW07cGFkZGluZy1ib3R0b206MC44ZW07Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6T3BlbiBTYW5zO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbFwiPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5SaW5jw7NuLUdhbGxhcmRvLCBTIC4mYW1wOyBGdWxsYW4sIE0uICgyMDE2KS4gRXNzZW50aWFsIGZlYXR1cmVzIG9mIGVmZmVjdGl2ZSBuZXR3b3JrcyBpbiBlZHVjYXRpb24uIDwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDFfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+Sm91cm5hbCBvZiBQcm9mZXNzaW9uYWwgQ2FwaXRhbCBhbmQgQ29tbXVuaXR5LCAxPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj4oMSksIDXigJMyMi48L3NwYW4+PC9wPjxwIHN0eWxlPVwibGluZS1oZWlnaHQ6MS41ZW07cGFkZGluZy10b3A6MC40ZW07cGFkZGluZy1ib3R0b206MC44ZW07Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6T3BlbiBTYW5zO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbFwiPjxzcGFuIHN0eWxlPVwidGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZSA7Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5Sb290aGFhbiwgQS4gKDIwMTkpPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj4uIEludGVya3VsdHVyZWxsLCB0cmFuc2t1bHR1cmVsbCwgY3Jvc3MtY3VsdHVyYWwg4oCTIHdhcnVtIHdpciBhbGxlIGRyZWkgQmVncmlmZmUgYnJhdWNoZW4uIDwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDFfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+UG9seWxvZywgNDAsPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj4gNjcgLTgyLjwvc3Bhbj48L3A+PHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjVlbTtwYWRkaW5nLXRvcDowLjRlbTtwYWRkaW5nLWJvdHRvbTowLjhlbTtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpPcGVuIFNhbnM7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPlJ1Z2dzLCBFLiwgJmFtcDsgSGVibCwgTS4gKDIwMTIpLiBMaXRlcmF0dXJlIG92ZXJ2aWV3OiBEaXZlcnNpdHksIGluY2x1c2lvbiwgYW5kIGN1bHR1cmFsIGF3YXJlbmVzcyBmb3IgY2xhc3Nyb29tIGFuZCBvdXRyZWFjaCBlZHVjYXRpb24uwqA8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQxXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPkFwcGx5IHJlc2VhcmNoIHRvIHByYWN0aWNlIChBUlApIHJlc291cmNlczwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+LCA5NzgxMzE1NDM3NDUzLTMuPC9zcGFuPjwvcD48cCBzdHlsZT1cImxpbmUtaGVpZ2h0OjEuNWVtO3BhZGRpbmctdG9wOjAuNGVtO3BhZGRpbmctYm90dG9tOjAuOGVtO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5Ok9wZW4gU2Fucztmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWxcIj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+U2NoYWNobmVyLCBNLiBLLiwgQnJlbmljaywgQS4sIE5vYWNrLCBQLiwgVmFuIGRlIFZpanZlciwgRi4gSi4sICZhbXA7IEhlaXptYW5uLCBCLiAoMjAxNSkuIFN0cnVjdHVyYWwgYW5kIG5vcm1hdGl2ZSBjb25kaXRpb25zIGZvciBpbnRlcmV0aG5pYyBmcmllbmRzaGlwcyBpbiBtdWx0aWV0aG5pYyBjbGFzc3Jvb21zLsKgPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MV81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5JbnRlcm5hdGlvbmFsIEpvdXJuYWwgb2YgSW50ZXJjdWx0dXJhbCBSZWxhdGlvbnM8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPizCoDwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDFfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+NDc8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPiwgMS0xMi48L3NwYW4+PC9wPjxwIHN0eWxlPVwibGluZS1oZWlnaHQ6MS41ZW07cGFkZGluZy10b3A6MC40ZW07cGFkZGluZy1ib3R0b206MC44ZW07Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6T3BlbiBTYW5zO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbFwiPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5TY2jDtm4sIEQuIEEuICgxOTgzKS4gPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MV81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5UaGUgUmVmbGVjdGl2ZSBQcmFjdGl0aW9uZXI6IEhvdyBQcm9mZXNzaW9uYWxzIFRoaW5rIGluIEFjdGlvbjwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+LiBOZXcgWW9yazogQmFzaWMgQm9va3MuPC9zcGFuPjwvcD48cCBzdHlsZT1cImxpbmUtaGVpZ2h0OjEuNWVtO3BhZGRpbmctdG9wOjAuNGVtO3BhZGRpbmctYm90dG9tOjAuOGVtO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5Ok9wZW4gU2Fucztmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWxcIj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+U2lubmVyLCBLLiAoMjAxMSkuIFRyYW5za3VsdHVyYWxpdMOkdCB2ZXJzdXMgTXVsdGkgdW5kIEludGVya3VsdHVyYWxpdMOkdC4gPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MV81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5zdGFkdGt1bHR1ciBtYWdhemluLCAxNiw8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPiAxMC0xMS4gPC9zcGFuPjxhIHRpdGxlPVwiaHR0cHM6Ly93d3cuc3RhZHRrdWx0dXItaGguZGUvd3AtY29udGVudC91cGxvYWRzLzIwMTUvMDIvc3RhZHRrdWx0dXJfbWFnYXppbl8xNi5wZGZcIiBocmVmPVwiaHR0cHM6Ly93d3cuc3RhZHRrdWx0dXItaGguZGUvd3AtY29udGVudC91cGxvYWRzLzIwMTUvMDIvc3RhZHRrdWx0dXJfbWFnYXppbl8xNi5wZGZcIiB0YXJnZXQ9XCJfYmxhbmtcIj48c3BhbiBzdHlsZT1cInRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmUgO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+aHR0cHM6Ly93d3cuc3RhZHRrdWx0dXItaGguZGUvd3AtY29udGVudC91cGxvYWRzLzIwMTUvMDIvc3RhZHRrdWx0dXJfbWFnYXppbl8xNi5wZGY8L3NwYW4+PC9hPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj47IDQuNS4yMDIzPC9zcGFuPjwvcD48cCBzdHlsZT1cImxpbmUtaGVpZ2h0OjEuNWVtO3BhZGRpbmctdG9wOjAuNGVtO3BhZGRpbmctYm90dG9tOjAuOGVtO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5Ok9wZW4gU2Fucztmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWxcIj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+U3lkb3csIE4uICgyMDEwKS4gVmVybmV0enVuZyB2b24gU2NodWxlbj8gQmV0cmllYnN3aXJ0c2NoYWZ0bGljaGUgRXJrZW5udG5pc3NlIHp1bSBOZXR6d2Vya21hbmFnZW1lbnQuIEluIE4uIEJlcmtlbWV5ZXIsIFcuIEJvcyAmYW1wOyBILiBLdXBlciAoSHJzZy4pLCA8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQxXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPlNjaHVscmVmb3JtIGR1cmNoIFZlcm5ldHp1bmcuIEludGVyZGlzemlwbGluw6RyZSBCZXRyYWNodHVuZ2VuPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj4gKHBwLiAzMy00OCk8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQxXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPi4gPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5Nw7xuc3RlcjogV2F4bWFubi48L3NwYW4+PC9wPiIsImEiOiI8cD48dT5NZWNoZXJpbDwvdT4sIFAuLCBDYXN0cm8gVmFyZWxhLCBNLiwgRGlyaW0sIEkuLCBLYWxwYWthLCBBLiAmYW1wOyBNZWx0ZXIsIEMuICgyMDEwKS4gPGk+TWlncmF0aW9uc3DDpGRhZ29naWsuPC9pPiBXZWluaGVpbTogQmVsdHouIOKAiyDigIsgPC9wPjxwPk1lY2hlcmlsLCBQLiAoMjAxNik6IE1pZ3JhdGlvbnNww6RkYWdvZ2lrIOKAkyBlaW4gUHJvamVrdC4gSW4gUC4gTWVjaGVyaWwgKGVkLiksIDxpPkhhbmRidWNoIE1pZ3JhdGlvbnNww6RkYWdvZ2lrPC9pPiAocHAuIDgtMzAuKS4gV2VpbmhlaW06IEJlbHR6LiA8L3A+PHA+TWVjaGVyaWwsIFAuICZhbXA7IE1lbHRlciwgQy4gKDIwMTApLiBHZXfDtmhubGljaGUgVW50ZXJzY2hlaWR1bmdlbi4gV2VnZSBhdXMgZGVtIFJhc3Npc211cy4gSW4gUy4gQW5kcmVzZW4sIEsuIEh1cnJlbG1hbm4sIEMuIFBhbGVudGllbiAmYW1wOyBXLiBTY2hyw7ZlciAoZWRzLiksIE1pZ3JhdGlvbnNww6RkYWdvZ2lrIChwcC4gMTUwLTE3OCkuIFdlaW5oZWltIHVuZCBCYXNlbDogQmVsdHouPC9wPjxwPk11aWppLDIwMTc8L3A+PHA+PHU+TmF6YXJraWV3aWN6LCBLLiAmYW1wOyBLcsOkbWVyLCBHLiAoMjAxMyk8L3U+LiBJbnRlcmt1bHR1cmVsbCwgbXVsdGlrdWx0dXJlbGwsIHRyYW5za3VsdHVyZWxsOiBLdWx0dXIoZW4pIGluIEJlZ2xlaXRwcm96ZXNzZW4gc3lzdGVtYXRpc2NoIGJlcsO8Y2tzaWNodGlnZW4uIDxpPktvbnRleHQsIDQ0PC9pPigxKSwgMjIg4oCTIDQwLjwvcD48cD5OZ3V5ZW4sIFQuIFEuICgyMDE0KS4g4oCeT2ZmZW5zaWNodGxpY2ggdW5kIHp1Z2VkZWNrdOKAnC0gQWxsdGFnc3Jhc3Npc211cyBpbiBEZXV0c2NobGFuZC4gQnVuZGVzemVudHJhbGUgZsO8ciBwb2xpdGlzY2hlIEJpbGR1bmcgPGEgdGl0bGU9XCJodHRwczovL3d3dy5icGIuZGUvZGlhbG9nLzE5NDU2OS9vZmZlbnNpY2h0bGljaC11bmQtenVnZWRlY2t0LWFsbHRhZ3NyYXNzaXNtdXMtaW4tZGV1dHNjaGxhbmRcIiBocmVmPVwiaHR0cHM6Ly93d3cuYnBiLmRlL2RpYWxvZy8xOTQ1Njkvb2ZmZW5zaWNodGxpY2gtdW5kLXp1Z2VkZWNrdC1hbGx0YWdzcmFzc2lzbXVzLWluLWRldXRzY2hsYW5kXCIgdGFyZ2V0PVwiX2JsYW5rXCI+PHU+aHR0cHM6Ly93d3cuYnBiLmRlL2RpYWxvZy8xOTQ1Njkvb2ZmZW5zaWNodGxpY2gtdW5kLXp1Z2VkZWNrdC1hbGx0YWdzcmFzc2lzbXVzLWluLWRldXRzY2hsYW5kPC91PjwvYT4gKDAyLjAxLjIwMjIpPC9wPjxwPk9FQ0QgKDIwMDkpLiA8aT5PRUNEIFRvb2xraXQgb24gVGVhY2hpbmcgZm9yIERpdmVyc2l0eS4gZm9yIFRlYWNoaW5nIG9uIERpdmVyc2l0eS4gPC9pPlJldHJpZXZlZCBTZXB0ZW1iZXIsIDV0aCwgMjAxOSBmcm9tIDxhIHRpdGxlPVwiaHR0cDovL3d3dy5vZWNkLm9yZy9nZW5lcmFsL3NlYXJjaHJlc3VsdHMvP3E9VG9vbGtpdCUyMGZvciUyMHRlYWNoZXJzJTIwb2YlMjBkaXZlcnNpdHlcIiBocmVmPVwiaHR0cDovL3d3dy5vZWNkLm9yZy9nZW5lcmFsL3NlYXJjaHJlc3VsdHMvP3E9VG9vbGtpdCUyMGZvciUyMHRlYWNoZXJzJTIwb2YlMjBkaXZlcnNpdHlcIiB0YXJnZXQ9XCJfYmxhbmtcIj48dT5odHRwOi8vd3d3Lm9lY2Qub3JnL2dlbmVyYWwvc2VhcmNocmVzdWx0cy8/cT1Ub29sa2l0JTIwZm9yJTIwdGVhY2hlcnMlMjBvZiUyMGRpdmVyc2l0eTwvdT48L2E+PC9wPjxwPk9FQ0QgKDIwMTYpLiA8aT5HbG9iYWwgY29tcGV0ZW5jeSBmb3IgYW4gaW5jbHVzaXZlIHdvcmxkLjwvaT4gUGFyaXM6IE9FQ0QuPC9wPjxwPk9FQ0QgKDIwMTkpLiA8aT5UQUxJUyAyMDE4IFJlc3VsdHMgKFZvbC4gSSk6IFRlYWNoZXJzIGFuZCBTY2hvb2wgTGVhZGVycyBhcyBMaWZlbG9uZyBMZWFybmVycy48L2k+IFBhcmlzOiBPRUNELjwvcD48cD5PJiMzOTtIYXJhLCBKLiwgQnJvd24sIE0uLCBNY05hbWFyYSwgRy4sICZhbXA7IFNoZXZsaW4sIFAuICgyMDIwKS4gVGhlIHBvdGVudGlhbCwgbGltaXRhdGlvbnMgYW5kIGV2YWx1YXRpb24gb2YgZWR1Y2F0aW9uIG5ldHdvcmtzIGluIGEgbW9ub2NlbnRyaWMgc3lzdGVtLiA8aT5SZXZpc3RhIGRlIEludmVzdGlnYWNpw7NuIEVkdWNhdGl2YTwvaT7CoDM4LCBuby4gMSwg4oCLIDMzLTUyLjwvcD48cD5Qb3ZleSwgSi4sIENhbXBiZWxsLCBBLiBLLiwgV2lsbGlzLCBMLiBELiwgSGF5bmVzLCBNLiwgV2VzdGVybiwgTS4sIEJlbm5ldHQsIFMuLCAuLi4gJmFtcDsgUGVkZGUsIEMuICgyMDE2KS4gRW5nYWdpbmcgcGFyZW50cyBpbiBzY2hvb2xzIGFuZCBidWlsZGluZyBwYXJlbnQtc2Nob29sIHBhcnRuZXJzaGlwczogVGhlIHJvbGUgb2Ygc2Nob29sIGFuZCBwYXJlbnQgb3JnYW5pc2F0aW9uIGxlYWRlcnNoaXAuwqA8aT5JbnRlcm5hdGlvbmFsIEpvdXJuYWwgb2YgRWR1Y2F0aW9uYWwgUmVzZWFyY2g8L2k+LMKgPGk+Nzk8L2k+LCAxMjgtMTQxLjwvcD48cD5SaW5jw7NuLUdhbGxhcmRvLCBTIC4mYW1wOyBGdWxsYW4sIE0uICgyMDE2KS4gRXNzZW50aWFsIGZlYXR1cmVzIG9mIGVmZmVjdGl2ZSBuZXR3b3JrcyBpbiBlZHVjYXRpb24uIDxpPkpvdXJuYWwgb2YgUHJvZmVzc2lvbmFsIENhcGl0YWwgYW5kIENvbW11bml0eSwgMTwvaT4oMSksIDXigJMyMi48L3A+PHA+PHU+Um9vdGhhYW4sIEEuICgyMDE5KTwvdT4uIEludGVya3VsdHVyZWxsLCB0cmFuc2t1bHR1cmVsbCwgY3Jvc3MtY3VsdHVyYWwg4oCTIHdhcnVtIHdpciBhbGxlIGRyZWkgQmVncmlmZmUgYnJhdWNoZW4uIDxpPlBvbHlsb2csIDQwLDwvaT4gNjcgLTgyLjwvcD48cD5SdWdncywgRS4sICZhbXA7IEhlYmwsIE0uICgyMDEyKS4gTGl0ZXJhdHVyZSBvdmVydmlldzogRGl2ZXJzaXR5LCBpbmNsdXNpb24sIGFuZCBjdWx0dXJhbCBhd2FyZW5lc3MgZm9yIGNsYXNzcm9vbSBhbmQgb3V0cmVhY2ggZWR1Y2F0aW9uLsKgPGk+QXBwbHkgcmVzZWFyY2ggdG8gcHJhY3RpY2UgKEFSUCkgcmVzb3VyY2VzPC9pPiwgOTc4MTMxNTQzNzQ1My0zLjwvcD48cD5TY2hhY2huZXIsIE0uIEsuLCBCcmVuaWNrLCBBLiwgTm9hY2ssIFAuLCBWYW4gZGUgVmlqdmVyLCBGLiBKLiwgJmFtcDsgSGVpem1hbm4sIEIuICgyMDE1KS4gU3RydWN0dXJhbCBhbmQgbm9ybWF0aXZlIGNvbmRpdGlvbnMgZm9yIGludGVyZXRobmljIGZyaWVuZHNoaXBzIGluIG11bHRpZXRobmljIGNsYXNzcm9vbXMuwqA8aT5JbnRlcm5hdGlvbmFsIEpvdXJuYWwgb2YgSW50ZXJjdWx0dXJhbCBSZWxhdGlvbnM8L2k+LMKgPGk+NDc8L2k+LCAxLTEyLjwvcD48cD5TY2jDtm4sIEQuIEEuICgxOTgzKS4gPGk+VGhlIFJlZmxlY3RpdmUgUHJhY3RpdGlvbmVyOiBIb3cgUHJvZmVzc2lvbmFscyBUaGluayBpbiBBY3Rpb248L2k+LiBOZXcgWW9yazogQmFzaWMgQm9va3MuPC9wPjxwPlNpbm5lciwgSy4gKDIwMTEpLiBUcmFuc2t1bHR1cmFsaXTDpHQgdmVyc3VzIE11bHRpIHVuZCBJbnRlcmt1bHR1cmFsaXTDpHQuIDxpPnN0YWR0a3VsdHVyIG1hZ2F6aW4sIDE2LDwvaT4gMTAtMTEuIDxhIHRpdGxlPVwiaHR0cHM6Ly93d3cuc3RhZHRrdWx0dXItaGguZGUvd3AtY29udGVudC91cGxvYWRzLzIwMTUvMDIvc3RhZHRrdWx0dXJfbWFnYXppbl8xNi5wZGZcIiBocmVmPVwiaHR0cHM6Ly93d3cuc3RhZHRrdWx0dXItaGguZGUvd3AtY29udGVudC91cGxvYWRzLzIwMTUvMDIvc3RhZHRrdWx0dXJfbWFnYXppbl8xNi5wZGZcIiB0YXJnZXQ9XCJfYmxhbmtcIj48dT5odHRwczovL3d3dy5zdGFkdGt1bHR1ci1oaC5kZS93cC1jb250ZW50L3VwbG9hZHMvMjAxNS8wMi9zdGFkdGt1bHR1cl9tYWdhemluXzE2LnBkZjwvdT48L2E+OyA0LjUuMjAyMzwvcD48cD5TeWRvdywgTi4gKDIwMTApLiBWZXJuZXR6dW5nIHZvbiBTY2h1bGVuPyBCZXRyaWVic3dpcnRzY2hhZnRsaWNoZSBFcmtlbm50bmlzc2UgenVtIE5ldHp3ZXJrbWFuYWdlbWVudC4gSW4gTi4gQmVya2VtZXllciwgVy4gQm9zICZhbXA7IEguIEt1cGVyIChIcnNnLiksIDxpPlNjaHVscmVmb3JtIGR1cmNoIFZlcm5ldHp1bmcuIEludGVyZGlzemlwbGluw6RyZSBCZXRyYWNodHVuZ2VuPC9pPiAocHAuIDMzLTQ4KTxpPi4gPC9pPk3DvG5zdGVyOiBXYXhtYW5uLjwvcD4iLCJyIjpbXSwiZCI6WyJNZWNoZXJpbCwgUC4sIENhc3RybyBWYXJlbGEsIE0uLCBEaXJpbSwgSS4sIEthbHBha2EsIEEuICYgTWVsdGVyLCBDLiAoMjAxMCkuIE1pZ3JhdGlvbnNww6RkYWdvZ2lrLiBXZWluaGVpbTogQmVsdHouwqAgwqBcbk1lY2hlcmlsLCBQLiAoMjAxNik6IE1pZ3JhdGlvbnNww6RkYWdvZ2lrIOKAkyBlaW4gUHJvamVrdC4gSW4gUC4gTWVjaGVyaWwgKGVkLiksIEhhbmRidWNoIE1pZ3JhdGlvbnNww6RkYWdvZ2lrIChwcC4gOC0zMC4pLiBXZWluaGVpbTogQmVsdHouIFxuTWVjaGVyaWwsIFAuICYgTWVsdGVyLCBDLiAoMjAxMCkuIEdld8O2aG5saWNoZSBVbnRlcnNjaGVpZHVuZ2VuLiBXZWdlIGF1cyBkZW0gUmFzc2lzbXVzLiBJbiBTLiBBbmRyZXNlbiwgSy4gSHVycmVsbWFubiwgQy4gUGFsZW50aWVuICYgVy4gU2NocsO2ZXIgKGVkcy4pLCBNaWdyYXRpb25zcMOkZGFnb2dpayAocHAuIDE1MC0xNzgpLiBXZWluaGVpbSB1bmQgQmFzZWw6IEJlbHR6LlxuTXVpamksMjAxN1xuTmF6YXJraWV3aWN6LCBLLiAmIEtyw6RtZXIsIEcuICgyMDEzKS4gSW50ZXJrdWx0dXJlbGwsIG11bHRpa3VsdHVyZWxsLCB0cmFuc2t1bHR1cmVsbDogS3VsdHVyKGVuKSBpbiBCZWdsZWl0cHJvemVzc2VuIHN5c3RlbWF0aXNjaCBiZXLDvGNrc2ljaHRpZ2VuLiBLb250ZXh0LCA0NCgxKSwgMjIg4oCTIDQwLlxuTmd1eWVuLCBULiBRLiAoMjAxNCkuIOKAnk9mZmVuc2ljaHRsaWNoIHVuZCB6dWdlZGVja3TigJwtIEFsbHRhZ3NyYXNzaXNtdXMgaW4gRGV1dHNjaGxhbmQuIEJ1bmRlc3plbnRyYWxlIGbDvHIgcG9saXRpc2NoZSBCaWxkdW5nIGh0dHBzOi8vd3d3LmJwYi5kZS9kaWFsb2cvMTk0NTY5L29mZmVuc2ljaHRsaWNoLXVuZC16dWdlZGVja3QtYWxsdGFnc3Jhc3Npc211cy1pbi1kZXV0c2NobGFuZCAoMDIuMDEuMjAyMilcbk9FQ0QgKDIwMDkpLiBPRUNEIFRvb2xraXQgb24gVGVhY2hpbmcgZm9yIERpdmVyc2l0eS4gZm9yIFRlYWNoaW5nIG9uIERpdmVyc2l0eS4gUmV0cmlldmVkIFNlcHRlbWJlciwgNXRoLCAyMDE5IGZyb20gaHR0cDovL3d3dy5vZWNkLm9yZy9nZW5lcmFsL3NlYXJjaHJlc3VsdHMvP3E9VG9vbGtpdCUyMGZvciUyMHRlYWNoZXJzJTIwb2YlMjBkaXZlcnNpdHlcbk9FQ0QgKDIwMTYpLiBHbG9iYWwgY29tcGV0ZW5jeSBmb3IgYW4gaW5jbHVzaXZlIHdvcmxkLiBQYXJpczogT0VDRC5cbk9FQ0QgKDIwMTkpLiBUQUxJUyAyMDE4IFJlc3VsdHMgKFZvbC4gSSk6IFRlYWNoZXJzIGFuZCBTY2hvb2wgTGVhZGVycyBhcyBMaWZlbG9uZyBMZWFybmVycy4gUGFyaXM6IE9FQ0QuXG5PJ0hhcmEsIEouLCBCcm93biwgTS4sIE1jTmFtYXJhLCBHLiwgJiBTaGV2bGluLCBQLiAoMjAyMCkuIFRoZSBwb3RlbnRpYWwsIGxpbWl0YXRpb25zIGFuZCBldmFsdWF0aW9uIG9mIGVkdWNhdGlvbiBuZXR3b3JrcyBpbiBhIG1vbm9jZW50cmljIHN5c3RlbS4gUmV2aXN0YSBkZSBJbnZlc3RpZ2FjacOzbiBFZHVjYXRpdmHCoDM4LCBuby4gMSwgIDMzLTUyLlxuUG92ZXksIEouLCBDYW1wYmVsbCwgQS4gSy4sIFdpbGxpcywgTC4gRC4sIEhheW5lcywgTS4sIFdlc3Rlcm4sIE0uLCBCZW5uZXR0LCBTLiwgLi4uICYgUGVkZGUsIEMuICgyMDE2KS4gRW5nYWdpbmcgcGFyZW50cyBpbiBzY2hvb2xzIGFuZCBidWlsZGluZyBwYXJlbnQtc2Nob29sIHBhcnRuZXJzaGlwczogVGhlIHJvbGUgb2Ygc2Nob29sIGFuZCBwYXJlbnQgb3JnYW5pc2F0aW9uIGxlYWRlcnNoaXAuwqBJbnRlcm5hdGlvbmFsIEpvdXJuYWwgb2YgRWR1Y2F0aW9uYWwgUmVzZWFyY2gswqA3OSwgMTI4LTE0MS5cblJpbmPDs24tR2FsbGFyZG8sIFMgLiYgRnVsbGFuLCBNLiAoMjAxNikuIEVzc2VudGlhbCBmZWF0dXJlcyBvZiBlZmZlY3RpdmUgbmV0d29ya3MgaW4gZWR1Y2F0aW9uLiBKb3VybmFsIG9mIFByb2Zlc3Npb25hbCBDYXBpdGFsIGFuZCBDb21tdW5pdHksIDEoMSksIDXigJMyMi5cblJvb3RoYWFuLCBBLiAoMjAxOSkuIEludGVya3VsdHVyZWxsLCB0cmFuc2t1bHR1cmVsbCwgY3Jvc3MtY3VsdHVyYWwg4oCTIHdhcnVtIHdpciBhbGxlIGRyZWkgQmVncmlmZmUgYnJhdWNoZW4uIFBvbHlsb2csIDQwLCA2NyAtODIuXG5SdWdncywgRS4sICYgSGVibCwgTS4gKDIwMTIpLiBMaXRlcmF0dXJlIG92ZXJ2aWV3OiBEaXZlcnNpdHksIGluY2x1c2lvbiwgYW5kIGN1bHR1cmFsIGF3YXJlbmVzcyBmb3IgY2xhc3Nyb29tIGFuZCBvdXRyZWFjaCBlZHVjYXRpb24uwqBBcHBseSByZXNlYXJjaCB0byBwcmFjdGljZSAoQVJQKSByZXNvdXJjZXMsIDk3ODEzMTU0Mzc0NTMtMy5cblNjaGFjaG5lciwgTS4gSy4sIEJyZW5pY2ssIEEuLCBOb2FjaywgUC4sIFZhbiBkZSBWaWp2ZXIsIEYuIEouLCAmIEhlaXptYW5uLCBCLiAoMjAxNSkuIFN0cnVjdHVyYWwgYW5kIG5vcm1hdGl2ZSBjb25kaXRpb25zIGZvciBpbnRlcmV0aG5pYyBmcmllbmRzaGlwcyBpbiBtdWx0aWV0aG5pYyBjbGFzc3Jvb21zLsKgSW50ZXJuYXRpb25hbCBKb3VybmFsIG9mIEludGVyY3VsdHVyYWwgUmVsYXRpb25zLMKgNDcsIDEtMTIuXG5TY2jDtm4sIEQuIEEuICgxOTgzKS4gVGhlIFJlZmxlY3RpdmUgUHJhY3RpdGlvbmVyOiBIb3cgUHJvZmVzc2lvbmFscyBUaGluayBpbiBBY3Rpb24uIE5ldyBZb3JrOiBCYXNpYyBCb29rcy5cblNpbm5lciwgSy4gKDIwMTEpLiBUcmFuc2t1bHR1cmFsaXTDpHQgdmVyc3VzIE11bHRpIHVuZCBJbnRlcmt1bHR1cmFsaXTDpHQuIHN0YWR0a3VsdHVyIG1hZ2F6aW4sIDE2LCAxMC0xMS4gaHR0cHM6Ly93d3cuc3RhZHRrdWx0dXItaGguZGUvd3AtY29udGVudC91cGxvYWRzLzIwMTUvMDIvc3RhZHRrdWx0dXJfbWFnYXppbl8xNi5wZGY7IDQuNS4yMDIzXG5TeWRvdywgTi4gKDIwMTApLiBWZXJuZXR6dW5nIHZvbiBTY2h1bGVuPyBCZXRyaWVic3dpcnRzY2hhZnRsaWNoZSBFcmtlbm50bmlzc2UgenVtIE5ldHp3ZXJrbWFuYWdlbWVudC4gSW4gTi4gQmVya2VtZXllciwgVy4gQm9zICYgSC4gS3VwZXIgKEhyc2cuKSwgU2NodWxyZWZvcm0gZHVyY2ggVmVybmV0enVuZy4gSW50ZXJkaXN6aXBsaW7DpHJlIEJldHJhY2h0dW5nZW4gKHBwLiAzMy00OCkuIE3DvG5zdGVyOiBXYXhtYW5uLiJdfSwidHAiOiJpdGVtIn0seyJpIjoiZGFodnpxbWdpZmpyIiwidCI6eyJoIjoiPHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjE1ZW07cGFkZGluZy10b3A6MGVtO3BhZGRpbmctYm90dG9tOjBlbTtmb250LXNpemU6MjRweDtmb250LWZhbWlseTpmbnQzXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MjRweDtmb250LWZhbWlseTpmbnQzXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPlQtWjwvc3Bhbj48L3A+IiwiYSI6IjxwPjxiPlQtWjwvYj48L3A+IiwiciI6W10sImQiOlsiVC1aIl19LCJjIjp7ImgiOiI8cCBzdHlsZT1cImxpbmUtaGVpZ2h0OjEuNWVtO3BhZGRpbmctdG9wOjAuNGVtO3BhZGRpbmctYm90dG9tOjAuOGVtO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5Ok9wZW4gU2Fucztmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWxcIj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+VGF5bG9yLCBDLiAoMjAwOSkuIDwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDFfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+TXVsdGlrdWx0dXJhbGlzbXVzIHVuZCBkaWUgUG9saXRpayBkZXIgQW5lcmtlbm51bmcuPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj4gRnJhbmtmdXJ0L01haW4uPC9zcGFuPjwvcD48cCBzdHlsZT1cImxpbmUtaGVpZ2h0OjEuNWVtO3BhZGRpbmctdG9wOjAuNGVtO3BhZGRpbmctYm90dG9tOjAuOGVtO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5Ok9wZW4gU2Fucztmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWxcIj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+VU5FU0NPICgyMDA5KS4gPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MV81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5Qb2xpY3kgZ3VpZGVsaW5lcyBvbiBpbmNsdXNpb24gaW4gZWR1Y2F0aW9uLjwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+IFBhcmlzIChPbmxpbmU6IGh0dHA6Ly93d3cuc2NyaWJkLmNvbS9kb2MvMzc2MjY0NDAvVU5FU0NPRWR1Y2F0aW9uLUluY2x1c2lvbi1Qb2xpY3ktR3VpZGVsaW5lc2FsaXphdGlvbi4gcGRmKTwvc3Bhbj48L3A+PHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjVlbTtwYWRkaW5nLXRvcDowLjRlbTtwYWRkaW5nLWJvdHRvbTowLjhlbTtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpPcGVuIFNhbnM7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPlVORVNDTyBbVW5pdGVkIE5hdGlvbnMgRWR1Y2F0aW9uYWwsIFNjaWVudGlmaWMgYW5kIEN1bHR1cmFsIE9yZ2FuaXphdGlvbl0gKDIwMTgpLiA8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQxXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPkdsb2JhbCBlZHVjYXRpb24gbW9uaXRvcmluZyByZXBvcnQgMjAxOTogbWlncmF0aW9uLCBkaXNwbGFjZW1lbnQgYW5kIGVkdWNhdGlvbjogYnVpbGRpbmcgYnJpZGdlcywgbm90IHdhbGxzLjwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+IFVORVNDTy4gPC9zcGFuPjwvcD48cCBzdHlsZT1cImxpbmUtaGVpZ2h0OjEuNWVtO3BhZGRpbmctdG9wOjAuNGVtO3BhZGRpbmctYm90dG9tOjAuOGVtO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5Ok9wZW4gU2Fucztmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWxcIj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+Vm9vcmJlcmcsIFcuLCBCZWtrZXJzLCBWLiwgJmFtcDsgVHVtbWVycywgTC4gKDIwMTQpLiA8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQxXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPkNvLWNyZWF0aW9uIGluIHNvY2lhbCBpbm5vdmF0aW9uOiBhIGNvbXBhcmF0aXZlIGNhc2Utc3R1ZHkgb24gdGhlIGluZmx1ZW50aWFsIGZhY3RvcnMgYW5kIG91dGNvbWVzIG9mIGNvLWNyZWF0aW9uLiA8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPk90dGF3YTog4oCLIElSU1BNLjwvc3Bhbj48L3A+PHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjVlbTtwYWRkaW5nLXRvcDowLjRlbTtwYWRkaW5nLWJvdHRvbTowLjhlbTtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpPcGVuIFNhbnM7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPldhbGQsIEEuICZhbXA7IEphbnNlbiwgRC4gKDIwMDcpLiBOZXR6d2Vya2UuIEluIEEuIEJlbnosIFMuIEzDvHR6LCBVLiBTY2hpbWFuayAmYW1wOyBHLiBTaW1vbmlzIChIcnNnLiksIDwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDFfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+SGFuZGJ1Y2ggR292ZXJuYW5jZTwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+IChwcC4gOTPigJMxMDUpLiBXaWVzYmFkZW46IFZTLjwvc3Bhbj48L3A+PHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjVlbTtwYWRkaW5nLXRvcDowLjRlbTtwYWRkaW5nLWJvdHRvbTowLjhlbTtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpPcGVuIFNhbnM7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPldlbHNjaCwgVy4gKDE5OTkpLiBUcmFuc2N1bHR1cmFsaXR5IOKAkyB0aGUgcHV6emxpbmcgZm9ybSBvZiBjdWx0dXJlcyB0b2RheS4gSW4gTS4gRmVhdGhlcnN0b25lICZhbXA7IFMuIExhc2ggKGVkcy4pLCA8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQxXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPlNwYWNlcyBvZiBDdWx0dXJlOiBDaXR5LCBOYXRpb24sIFdvcmxkPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj4gKFMuIDE5NCDigJMgMjEzKS4gTG9uZG9uOiBTYWdlLjwvc3Bhbj48L3A+PHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjVlbTtwYWRkaW5nLXRvcDowLjRlbTtwYWRkaW5nLWJvdHRvbTowLjhlbTtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpPcGVuIFNhbnM7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPldlbHNjaCwgVy4gKDIwMTApLiBXYXMgaXN0IGVpZ2VudGxpY2ggVHJhbnNrdWx0dXJhbGl0w6R0PyBJbiBMLiBEYXJvd3NrYSBldCBhbC4gKGVkcy4pLCA8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQxXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPkhvY2hzY2h1bGUgYWxzIHRyYW5za3VsdHVyZWxsZXIgUmF1bT8gS3VsdHVyLCBCaWxkdW5nIHVuZCBEaWZmZXJlbnogaW4gZGVyIFVuaXZlcnNpdMOkdDwvc3Bhbj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+IChwcC4gMznigJM2Nik8L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQxXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPi4gPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MF81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5CaWVsZWZlbGQuPC9zcGFuPjwvcD48cCBzdHlsZT1cImxpbmUtaGVpZ2h0OjEuNWVtO3BhZGRpbmctdG9wOjAuNGVtO3BhZGRpbmctYm90dG9tOjAuOGVtO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5Ok9wZW4gU2Fucztmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWxcIj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWw7XCI+V2V5ZXIsIEouICgyMDAwKS4gPC9zcGFuPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6Zm50MV81MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5Tb3ppYWxlIE5ldHp3ZXJrZS48L3NwYW4+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPiBNw7xuY2hlbjogT2xkZW5ib3VyZy48L3NwYW4+PC9wPiIsImEiOiI8cD5UYXlsb3IsIEMuICgyMDA5KS4gPGk+TXVsdGlrdWx0dXJhbGlzbXVzIHVuZCBkaWUgUG9saXRpayBkZXIgQW5lcmtlbm51bmcuPC9pPiBGcmFua2Z1cnQvTWFpbi48L3A+PHA+VU5FU0NPICgyMDA5KS4gPGk+UG9saWN5IGd1aWRlbGluZXMgb24gaW5jbHVzaW9uIGluIGVkdWNhdGlvbi48L2k+IFBhcmlzIChPbmxpbmU6IGh0dHA6Ly93d3cuc2NyaWJkLmNvbS9kb2MvMzc2MjY0NDAvVU5FU0NPRWR1Y2F0aW9uLUluY2x1c2lvbi1Qb2xpY3ktR3VpZGVsaW5lc2FsaXphdGlvbi4gcGRmKTwvcD48cD5VTkVTQ08gW1VuaXRlZCBOYXRpb25zIEVkdWNhdGlvbmFsLCBTY2llbnRpZmljIGFuZCBDdWx0dXJhbCBPcmdhbml6YXRpb25dICgyMDE4KS4gPGk+R2xvYmFsIGVkdWNhdGlvbiBtb25pdG9yaW5nIHJlcG9ydCAyMDE5OiBtaWdyYXRpb24sIGRpc3BsYWNlbWVudCBhbmQgZWR1Y2F0aW9uOiBidWlsZGluZyBicmlkZ2VzLCBub3Qgd2FsbHMuPC9pPiBVTkVTQ08uIDwvcD48cD5Wb29yYmVyZywgVy4sIEJla2tlcnMsIFYuLCAmYW1wOyBUdW1tZXJzLCBMLiAoMjAxNCkuIDxpPkNvLWNyZWF0aW9uIGluIHNvY2lhbCBpbm5vdmF0aW9uOiBhIGNvbXBhcmF0aXZlIGNhc2Utc3R1ZHkgb24gdGhlIGluZmx1ZW50aWFsIGZhY3RvcnMgYW5kIG91dGNvbWVzIG9mIGNvLWNyZWF0aW9uLiA8L2k+T3R0YXdhOiDigIsgSVJTUE0uPC9wPjxwPldhbGQsIEEuICZhbXA7IEphbnNlbiwgRC4gKDIwMDcpLiBOZXR6d2Vya2UuIEluIEEuIEJlbnosIFMuIEzDvHR6LCBVLiBTY2hpbWFuayAmYW1wOyBHLiBTaW1vbmlzIChIcnNnLiksIDxpPkhhbmRidWNoIEdvdmVybmFuY2U8L2k+IChwcC4gOTPigJMxMDUpLiBXaWVzYmFkZW46IFZTLjwvcD48cD5XZWxzY2gsIFcuICgxOTk5KS4gVHJhbnNjdWx0dXJhbGl0eSDigJMgdGhlIHB1enpsaW5nIGZvcm0gb2YgY3VsdHVyZXMgdG9kYXkuIEluIE0uIEZlYXRoZXJzdG9uZSAmYW1wOyBTLiBMYXNoIChlZHMuKSwgPGk+U3BhY2VzIG9mIEN1bHR1cmU6IENpdHksIE5hdGlvbiwgV29ybGQ8L2k+IChTLiAxOTQg4oCTIDIxMykuIExvbmRvbjogU2FnZS48L3A+PHA+V2Vsc2NoLCBXLiAoMjAxMCkuIFdhcyBpc3QgZWlnZW50bGljaCBUcmFuc2t1bHR1cmFsaXTDpHQ/IEluIEwuIERhcm93c2thIGV0IGFsLiAoZWRzLiksIDxpPkhvY2hzY2h1bGUgYWxzIHRyYW5za3VsdHVyZWxsZXIgUmF1bT8gS3VsdHVyLCBCaWxkdW5nIHVuZCBEaWZmZXJlbnogaW4gZGVyIFVuaXZlcnNpdMOkdDwvaT4gKHBwLiAzOeKAkzY2KTxpPi4gPC9pPkJpZWxlZmVsZC48L3A+PHA+V2V5ZXIsIEouICgyMDAwKS4gPGk+U296aWFsZSBOZXR6d2Vya2UuPC9pPiBNw7xuY2hlbjogT2xkZW5ib3VyZy48L3A+IiwiciI6W10sImQiOlsiVGF5bG9yLCBDLiAoMjAwOSkuIE11bHRpa3VsdHVyYWxpc211cyB1bmQgZGllIFBvbGl0aWsgZGVyIEFuZXJrZW5udW5nLiBGcmFua2Z1cnQvTWFpbi5cblVORVNDTyAoMjAwOSkuIFBvbGljeSBndWlkZWxpbmVzIG9uIGluY2x1c2lvbiBpbiBlZHVjYXRpb24uIFBhcmlzIChPbmxpbmU6IGh0dHA6Ly93d3cuc2NyaWJkLmNvbS9kb2MvMzc2MjY0NDAvVU5FU0NPRWR1Y2F0aW9uLUluY2x1c2lvbi1Qb2xpY3ktR3VpZGVsaW5lc2FsaXphdGlvbi4gcGRmKVxuVU5FU0NPIFtVbml0ZWQgTmF0aW9ucyBFZHVjYXRpb25hbCwgU2NpZW50aWZpYyBhbmQgQ3VsdHVyYWwgT3JnYW5pemF0aW9uXSAoMjAxOCkuIEdsb2JhbCBlZHVjYXRpb24gbW9uaXRvcmluZyByZXBvcnQgMjAxOTogbWlncmF0aW9uLCBkaXNwbGFjZW1lbnQgYW5kIGVkdWNhdGlvbjogYnVpbGRpbmcgYnJpZGdlcywgbm90IHdhbGxzLiBVTkVTQ08uIFxuVm9vcmJlcmcsIFcuLCBCZWtrZXJzLCBWLiwgJiBUdW1tZXJzLCBMLiAoMjAxNCkuIENvLWNyZWF0aW9uIGluIHNvY2lhbCBpbm5vdmF0aW9uOiBhIGNvbXBhcmF0aXZlIGNhc2Utc3R1ZHkgb24gdGhlIGluZmx1ZW50aWFsIGZhY3RvcnMgYW5kIG91dGNvbWVzIG9mIGNvLWNyZWF0aW9uLiBPdHRhd2E6ICBJUlNQTS5cbldhbGQsIEEuICYgSmFuc2VuLCBELiAoMjAwNykuIE5ldHp3ZXJrZS4gSW4gQS4gQmVueiwgUy4gTMO8dHosIFUuIFNjaGltYW5rICYgRy4gU2ltb25pcyAoSHJzZy4pLCBIYW5kYnVjaCBHb3Zlcm5hbmNlIChwcC4gOTPigJMxMDUpLiBXaWVzYmFkZW46IFZTLlxuV2Vsc2NoLCBXLiAoMTk5OSkuIFRyYW5zY3VsdHVyYWxpdHkg4oCTIHRoZSBwdXp6bGluZyBmb3JtIG9mIGN1bHR1cmVzIHRvZGF5LiBJbiBNLiBGZWF0aGVyc3RvbmUgJiBTLiBMYXNoIChlZHMuKSwgU3BhY2VzIG9mIEN1bHR1cmU6IENpdHksIE5hdGlvbiwgV29ybGQgKFMuIDE5NCDigJMgMjEzKS4gTG9uZG9uOiBTYWdlLlxuV2Vsc2NoLCBXLiAoMjAxMCkuIFdhcyBpc3QgZWlnZW50bGljaCBUcmFuc2t1bHR1cmFsaXTDpHQ/IEluIEwuIERhcm93c2thIGV0IGFsLiAoZWRzLiksIEhvY2hzY2h1bGUgYWxzIHRyYW5za3VsdHVyZWxsZXIgUmF1bT8gS3VsdHVyLCBCaWxkdW5nIHVuZCBEaWZmZXJlbnogaW4gZGVyIFVuaXZlcnNpdMOkdCAocHAuIDM54oCTNjYpLiBCaWVsZWZlbGQuXG5XZXllciwgSi4gKDIwMDApLiBTb3ppYWxlIE5ldHp3ZXJrZS4gTcO8bmNoZW46IE9sZGVuYm91cmcuIl19LCJ0cCI6Iml0ZW0ifV0sImkiOnsiaSI6ImJjdDIzNGc3YXQzMiIsInQiOnsiaCI6IjxwIHN0eWxlPVwibGluZS1oZWlnaHQ6MS4xNWVtO3BhZGRpbmctdG9wOjBlbTtwYWRkaW5nLWJvdHRvbTowZW07Zm9udC1zaXplOjI0cHg7Zm9udC1mYW1pbHk6Zm50M181MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbFwiPjxzcGFuIHN0eWxlPVwiZm9udC1zaXplOjI0cHg7Zm9udC1mYW1pbHk6Zm50M181MTk5MSwgQXJpYWwsIFNlcmlmLCBTYW5zLVNlcmlmO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbDtcIj5JbnRyb2R1Y3Rpb248L3NwYW4+PC9wPiIsImEiOiI8cD48Yj5JbnRyb2R1Y3Rpb248L2I+PC9wPiIsInIiOltdLCJkIjpbIkludHJvZHVjdGlvbiJdfSwiYyI6eyJoIjoiPHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjVlbTtwYWRkaW5nLXRvcDowLjRlbTtwYWRkaW5nLWJvdHRvbTowLjhlbTtmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MTRweDtmb250LWZhbWlseTpmbnQwXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7XCI+4oCLPC9zcGFuPjwvcD4iLCJhIjoiPHA+PC9wPiIsInIiOltdLCJkIjpbXX0sInYiOmZhbHNlfSwicyI6eyJpIjoib3FlNGlmNWRpNTltIiwidCI6eyJoIjoiPHAgc3R5bGU9XCJsaW5lLWhlaWdodDoxLjE1ZW07cGFkZGluZy10b3A6MGVtO3BhZGRpbmctYm90dG9tOjBlbTtmb250LXNpemU6MjRweDtmb250LWZhbWlseTpmbnQzXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsXCI+PHNwYW4gc3R5bGU9XCJmb250LXNpemU6MjRweDtmb250LWZhbWlseTpmbnQzXzUxOTkxLCBBcmlhbCwgU2VyaWYsIFNhbnMtU2VyaWY7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsO1wiPlN1bW1hcnk8L3NwYW4+PC9wPiIsImEiOiI8cD48Yj5TdW1tYXJ5PC9iPjwvcD4iLCJyIjpbXSwiZCI6WyJTdW1tYXJ5Il19LCJjIjp7ImgiOiI8cCBzdHlsZT1cImxpbmUtaGVpZ2h0OjEuNWVtO3BhZGRpbmctdG9wOjAuNGVtO3BhZGRpbmctYm90dG9tOjAuOGVtO2ZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zdHlsZTpub3JtYWxcIj48c3BhbiBzdHlsZT1cImZvbnQtc2l6ZToxNHB4O2ZvbnQtZmFtaWx5OmZudDBfNTE5OTEsIEFyaWFsLCBTZXJpZiwgU2Fucy1TZXJpZjtcIj7igIs8L3NwYW4+PC9wPiIsImEiOiI8cD48L3A+IiwiciI6W10sImQiOltdfSwidiI6ZmFsc2V9fSwicyI6eyJ0IjoiUkVGRVJFTkNFUyIsInRlIjp0cnVlLCJuYmUiOnRydWUsImZ0dyI6dHJ1ZSwiaXciOjk2MCwiaWgiOjU0MCwiY3NjIjoxLCJsYXIiOnRydWUsImRhdCI6MywidXBiIjpmYWxzZSwibWNlIjp0cnVlLCJ0bHciOjAuMjUsInMiOnRydWUsImdlIjpmYWxzZSwic2FuIjpmYWxzZSwiYWd0IjoxLCJuYXQiOjEsImNhIjoiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVoifX0sInMiOnsiZiI6eyJ0Ijp7InRmIjp7ImYiOiJmbnQzXzUxOTkxIiwicyI6MjQsImIiOmZhbHNlLCJpIjpmYWxzZX0sInBmIjp7InQiOiJwIiwibGgiOjEuMTUsIlQiOjEsImIiOjAuNX19LCJudCI6eyJ0ZiI6eyJmIjoiZm50Ml81MTk5MSIsInMiOjI0LCJiIjpmYWxzZSwiaSI6ZmFsc2V9LCJwZiI6eyJ0IjoicCIsImxoIjoxLjE1LCJUIjoxLCJiIjowLjV9fSwiYnQiOnsidGYiOnsiZiI6ImZudDNfNTE5OTEiLCJzIjoyNCwiYiI6ZmFsc2UsImkiOmZhbHNlfSwicGYiOnsidCI6InAiLCJsaCI6MS4xNSwiVCI6MSwiYiI6MC41fX19LCJwIjp7ImFjY2Vzc2liaWxpdHlIaWRkZW5MaW5rIjoiR28gdG8gdGhlIGJlZ2lubmluZyBvZiB0aGUgZGVzY3JpcHRpb24iLCJhY2Nlc3NpYmlsaXR5U2tpbkNyZWF0ZWRXaXRoIjoiQ3JlYXRlZCB3aXRoIGlTcHJpbmcgZXZhbHVhdGlvbiB2ZXJzaW9uIiwiYWNjZXNzaWJsZUFyaWFMYWJlbEJvdHRvbVBhbmVsIjoiQm90dG9tIEJhciIsImFjY2Vzc2libGVBcmlhTGFiZWxJdGVtRGVzY3JpcHRpb24iOiJFbGVtZW50IGRlc2NyaXB0aW9uIiwiYWNjZXNzaWJsZUFyaWFMYWJlbE5hdmlnYXRpb25CdXR0b25zIjoiTmF2aWdhdGlvbiBidXR0b25zIiwiYWNjZXNzaWJsZUFyaWFMYWJlbFNldHRpbmdzIjoiQWNjZXNzaWJpbGl0eSBTZXR0aW5ncyIsImJhY2tUb0FwcEJ1dHRvbkxhYmVsIjoiQmFjayIsImNvbnRlbnRMaXN0IjoiQ29udGVudCBMaXN0IiwiZW1wdHlTZWFyY2hSZXN1bHQiOiJObyBtYXRjaGVzIGZvdW5kLiIsImVuYWJsZUFjY2Vzc2liaWxpdHlNb2RlIjoiVHVybiBvbiBhY2Nlc3NpYmlsaXR5IG1vZGUiLCJlbmFibGVOb3JtYWxNb2RlIjoiVHVybiBvZmYgYWNjZXNzaWJpbGl0eSBtb2RlIiwibmV4dEJ1dHRvbiI6Ik5FWFQiLCJwcmV2QnV0dG9uIjoiUFJFViIsInNlYXJjaCI6IlNlYXJjaCJ9LCJjIjp7ImkiOiJ5cm4wanRzc29iZmUiLCJuIjoiQ3VzdG9tIHByZXNldCIsInMiOnsiaSI6eyJiZyI6MTYyNTA4NzEsImIiOjE0NzM3NjMyLCJ0aXRjIjoxNjc3NzIxNSwidGl0YiI6NTcyMzk5MSwiY2kiOmZhbHNlLCJ0YiI6MTY3NzcyMTUsInR0YyI6NDczNzA5NiwidHRiIjoxMTMxNjM5NiwiZ2FiIjo1NDA5NzU5LCJndGMiOjE2Nzc3MjE1LCJobGIiOjE2NzcyMjk1LCJobHQiOjQ3MzcwOTYsInNsYiI6MTY3NjgxNTAsInNsdCI6NDczNzA5Nn0sInQiOnsidGkiOjQ3MzcwOTYsImgiOjQ3MzcwOTYsInMiOjQ3MzcwOTYsInQiOjQ3MzcwOTYsIkgiOjU0MDk3NTl9LCJkIjp7ImJnIjoxNjc3NzIxNSwiYiI6MTQ3Mzc2MzJ9LCJhcCI6eyJwYiI6MTU5ODc2OTksImMiOjQ3MzcwOTYsInBsYiI6NzM2ODgxNn0sInAiOnsicGIiOjEzODgyNTc1LCJwbGIiOjE2Nzc3MjE1LCJiYiI6MTEwNTcyMjIsImhiYiI6OTkzOTAwMCwiYnRjIjoxNjc3NzIxNSwiaGJ0YyI6MTY3NzcyMTUsIm1iYXQiOjU0MDk3NTl9LCJzZiI6eyJzdGYiOjQ3MzcwOTYsInNpZiI6MTAwNjYzMjksInNiZyI6MTY3NzcyMTUsInNiciI6MTMwMjg4MjAsImFzYmciOjE2Nzc3MjE1LCJhc2JyIjoxMDEzMzY3MH19fSwibSI6eyJpIjoiNGYxM255amR6dnBsIiwibiI6IlZpc3VhbHMuQ29tbW9uLkVkaXRvci5Db2xvclNjaGVtZS5OYW1lLkxpZ2h0Qmx1ZSIsInMiOnsiaSI6eyJiZyI6MTYyNTA4NzEsImIiOjE0NzM3NjMyLCJ0aXRjIjoxNjc3NzIxNSwidGl0YiI6NTcyMzk5MSwiY2kiOmZhbHNlLCJ0YiI6MTY3NzcyMTUsInR0YyI6NDczNzA5NiwidHRiIjoxMTMxNjM5NiwiZ2FiIjo3Mzc0NTM0LCJndGMiOjU3OTYwMjAsImhsYiI6MTU0NjM5MzEsImhsdCI6MCwic2xiIjoxNjc2ODE1MCwic2x0Ijo0NzM3MDk2fSwidCI6eyJ0aSI6NDczNzA5NiwiaCI6NDczNzA5NiwicyI6NDczNzA5NiwidCI6NDczNzA5NiwiSCI6MjM4fSwiZCI6eyJiZyI6MTY3NzcyMTUsImIiOjE0NzM3NjMyfSwiYXAiOnsicGIiOjE1OTg3Njk5LCJjIjo0NzM3MDk2LCJwbGIiOjczNjg4MTZ9LCJwIjp7InBiIjoxMzU1NDEzMSwicGxiIjoxNjc3NzIxNSwiYmIiOjU0MDk3NTksImhiYiI6Mzg5ODMyNCwiYnRjIjoxNjc3NzIxNSwiaGJ0YyI6MTY3NzcyMTUsIm1iYXQiOjI4MzMyMjJ9LCJzZiI6eyJzdGYiOjQ3MzcwOTYsInNpZiI6MTAwNjYzMjksInNiZyI6MTY3NzcyMTUsInNiciI6MTMwMjg4MjAsImFzYmciOjE2Nzc3MjE1LCJhc2JyIjoxMDEzMzY3MH19fX0sInBzIjoie1xuICAgIFwiY1wiIDoge1xuICAgICAgICBcIlBcIiA6IHtcbiAgICAgICAgICAgIFwiZVwiIDogdHJ1ZSxcbiAgICAgICAgICAgIFwibFwiIDogdHJ1ZSxcbiAgICAgICAgICAgIFwibVwiIDogXCJzbGlkZVRpbWVsaW5lXCIsXG4gICAgICAgICAgICBcInZcIiA6IGZhbHNlXG4gICAgICAgIH0sXG4gICAgICAgIFwibFwiIDogdHJ1ZSxcbiAgICAgICAgXCJuXCIgOiBcImJ5U2xpZGVzXCIsXG4gICAgICAgIFwib1wiIDogZmFsc2UsXG4gICAgICAgIFwicFwiIDogZmFsc2UsXG4gICAgICAgIFwiclwiIDogdHJ1ZSxcbiAgICAgICAgXCJzXCIgOiBmYWxzZSxcbiAgICAgICAgXCJ2XCIgOiB0cnVlLFxuICAgICAgICBcIndcIiA6IGZhbHNlLFxuICAgICAgICBcInhcIiA6IGZhbHNlLFxuICAgICAgICBcInpcIiA6IHRydWVcbiAgICB9LFxuICAgIFwibFwiIDoge1xuICAgICAgICBcImJ1dHRvbi5jb250ZW50Lm5vcm1hbFwiIDogXCIjZmZmZmZmXCIsXG4gICAgICAgIFwiYnV0dG9uLmNvbnRlbnQub3ZlclwiIDogXCIjZmZmZmZmXCIsXG4gICAgICAgIFwiYnV0dG9uLmZhY2Uubm9ybWFsXCIgOiBcIiNhOGI4NDZcIixcbiAgICAgICAgXCJidXR0b24uZmFjZS5vdmVyXCIgOiBcIiM5N2E4MzhcIixcbiAgICAgICAgXCJjb21wYW55TG9nby5iYWNrZ3JvdW5kXCIgOiBcIiNGM0YzRjNcIixcbiAgICAgICAgXCJoeXBlcmxpbmtcIiA6IFwiIzUyOEJERlwiLFxuICAgICAgICBcImxpc3RJdGVtLmZhY2Uub3ZlclwiIDogXCIjRTFFMkUyXCIsXG4gICAgICAgIFwibGlzdEl0ZW0uZmFjZS5wcmVzc2VkXCIgOiBcIiM5REEyQTZcIixcbiAgICAgICAgXCJsaXN0SXRlbS5sYWJlbC5vdmVyXCIgOiBcIiM0NzQ4NEFcIixcbiAgICAgICAgXCJsaXN0SXRlbS5sYWJlbC5wcmVzc2VkXCIgOiBcIiNGRkZGRkZcIixcbiAgICAgICAgXCJsaXN0SXRlbS5sYWJlbC52aXNpdGVkXCIgOiBcIiM3MjczNzRcIixcbiAgICAgICAgXCJwYWdlLmJhY2tncm91bmRcIiA6IFwiI2QzZDRjZlwiLFxuICAgICAgICBcInBhbmVsLmJhY2tncm91bmRcIiA6IFwiI0ZGRkZGRlwiLFxuICAgICAgICBcInBhbmVsLnRleHRcIiA6IFwiIzQ3NDg0QVwiLFxuICAgICAgICBcInBsYXllci5iYWNrZ3JvdW5kXCIgOiBcIiNmZmZmZmZcIixcbiAgICAgICAgXCJwb3B1cC5iYWNrZ3JvdW5kXCIgOiBcIiNGM0YzRjNcIixcbiAgICAgICAgXCJwcm9ncmVzcy5iYWNrZ3JvdW5kXCIgOiBcIiNGN0Y3RjdcIixcbiAgICAgICAgXCJwcm9ncmVzcy5sb2FkaW5nXCIgOiBcIiNEOUQ5RDlcIixcbiAgICAgICAgXCJwcm9ncmVzcy5wbGF5YmFja1wiIDogXCIjNTI4QkRGXCIsXG4gICAgICAgIFwic2xpZGUuYm9yZGVyXCIgOiBcIiNlMGUwZTBcIixcbiAgICAgICAgXCJ0ZXh0XCIgOiBcIiM0NzQ4NEFcIlxuICAgIH0sXG4gICAgXCJtXCIgOiBmYWxzZSxcbiAgICBcIm9cIiA6IHtcbiAgICAgICAgXCJoXCIgOiB0cnVlLFxuICAgICAgICBcIm1cIiA6IHRydWUsXG4gICAgICAgIFwiblwiIDogZmFsc2UsXG4gICAgICAgIFwic1wiIDogdHJ1ZSxcbiAgICAgICAgXCJ0XCIgOiBmYWxzZVxuICAgIH0sXG4gICAgXCJzXCIgOiB7XG4gICAgICAgIFwiTFwiIDogdHJ1ZSxcbiAgICAgICAgXCJsXCIgOiB0cnVlLFxuICAgICAgICBcIm5cIiA6IGZhbHNlLFxuICAgICAgICBcIm9cIiA6IHRydWUsXG4gICAgICAgIFwicFwiIDogZmFsc2UsXG4gICAgICAgIFwidlwiIDogdHJ1ZVxuICAgIH0sXG4gICAgXCJ0XCIgOiB7XG4gICAgICAgIFwiYlwiIDogWyBcImF0dGFjaG1lbnRzXCIgXSxcbiAgICAgICAgXCJibFwiIDogZmFsc2UsXG4gICAgICAgIFwiY1wiIDogdHJ1ZSxcbiAgICAgICAgXCJsXCIgOiB0cnVlLFxuICAgICAgICBcInZcIiA6IHRydWVcbiAgICB9XG59Iiwic2IiOiJDOi9Vc2Vycy9kYmFyYS9EZXNrdG9wL21vb2MtdHIgKFB1Ymxpc2hlZCkvZGF0YS9pbnRlcmFjdGlvbl9iZ18xLnBuZyIsImZwIjpmYWxzZSwicnMiOnsiYSI6e30sInYiOnt9LCJpIjp7IkM6L1VzZXJzL2RiYXJhL0Rlc2t0b3AvbW9vYy10ciAoUHVibGlzaGVkKS9kYXRhL2ludGVyYWN0aW9uX2JnXzEucG5nIjp7InMiOiJpbnRyN1xcaW1hZ2VzXFxpbnRlcmFjdGlvbl9iZ18xLnBuZyIsInYiOjEyODAsImgiOjcyMH19fSwiZnMiOnsiZm50MF81MTk5MSI6WyJpbnRyNy9mb250cy9mbnQwLndvZmYiXSwiZm50MV81MTk5MSI6WyJpbnRyNy9mb250cy9mbnQxLndvZmYiXSwiZm50Ml81MTk5MSI6WyJpbnRyNy9mb250cy9mbnQyLndvZmYiXSwiZm50M181MTk5MSI6WyJpbnRyNy9mb250cy9mbnQzLndvZmYiXX0sIlMiOnsiZm50MF81MTk5MSI6eyJmIjoiT3BlbiBTYW5zIiwiYiI6ZmFsc2UsImkiOmZhbHNlfSwiZm50MV81MTk5MSI6eyJmIjoiT3BlbiBTYW5zIiwiYiI6ZmFsc2UsImkiOnRydWV9LCJmbnQyXzUxOTkxIjp7ImYiOiJTZWdvZSBVSSIsImIiOmZhbHNlLCJpIjpmYWxzZX0sImZudDNfNTE5OTEiOnsiZiI6IlNlZ29lIFVJIiwiYiI6dHJ1ZSwiaSI6ZmFsc2V9fSwidiI6e319";
	var skinSettings = {};
	loadHandler&&loadHandler(128, 'interactivity_vwwbbfdxh6m8', interactionJson, skinSettings);
	})();